Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Incoming config yielded no classloaders; adding standard SE ones
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5906ebcb
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6646153
Adding type registration yes_no -> org.hibernate.type.YesNoType@6295d394
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration char -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c417213
Adding type registration integer -> org.hibernate.type.IntegerType@60611244
Adding type registration int -> org.hibernate.type.IntegerType@60611244
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60611244
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@fdefd3f
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1198b989
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@197d671
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@197d671
Adding type registration string -> org.hibernate.type.StringType@13c10b87
Adding type registration java.lang.String -> org.hibernate.type.StringType@13c10b87
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fc2413d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23986957
Adding type registration url -> org.hibernate.type.UrlType@60704c
Adding type registration java.net.URL -> org.hibernate.type.UrlType@60704c
Adding type registration date -> org.hibernate.type.DateType@2805c96b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2805c96b
Adding type registration time -> org.hibernate.type.TimeType@37918c79
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37918c79
Adding type registration timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@222114ba
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b07a0d6
Adding type registration calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45018215
Adding type registration locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration class -> org.hibernate.type.ClassType@47542153
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47542153
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54c562f7
Adding type registration binary -> org.hibernate.type.BinaryType@2f112965
Adding type registration byte[] -> org.hibernate.type.BinaryType@2f112965
Adding type registration [B -> org.hibernate.type.BinaryType@2f112965
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration image -> org.hibernate.type.ImageType@5276e6b0
Adding type registration characters -> org.hibernate.type.CharArrayType@78aab498
Adding type registration char[] -> org.hibernate.type.CharArrayType@78aab498
Adding type registration [C -> org.hibernate.type.CharArrayType@78aab498
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration text -> org.hibernate.type.TextType@5e316c74
Adding type registration ntext -> org.hibernate.type.NTextType@7f010382
Adding type registration blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78e117e3
Adding type registration clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration nclob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@418e7838
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cd3fee8
Adding type registration serializable -> org.hibernate.type.SerializableType@3e92efc3
Adding type registration object -> org.hibernate.type.ObjectType@353d0772
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@353d0772
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57c758ac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a9cd3b1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13e39c73
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64cd705f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9225652
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@654f0d9c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a400542
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6580cfdd
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: objets.Client
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Client
Bind entity objets.Client on table CLIENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Collection role: objets.Client.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
building SimpleValue for nom
Building property nom
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property prenom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
building SimpleValue for prenom
Building property prenom
Binding entity from annotated class: objets.Emprunt
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Emprunt
Bind entity objets.Emprunt on table EMPRUNT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
Building property client
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_debut with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
building SimpleValue for date_debut
Building property date_debut
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_fin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
building SimpleValue for date_fin
Building property date_fin
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property delai with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
building SimpleValue for delai
Building property delai
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
Collection role: objets.Emprunt.livres
Building property livres
Binding entity from annotated class: objets.Livre
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Livre
Bind entity objets.Livre on table livre
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property auteur with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
building SimpleValue for auteur
Building property auteur
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Collection role: objets.Livre.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property titre with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
building SimpleValue for titre
Building property titre
Starting fillSimpleValue for id
Starting fillSimpleValue for nom
Starting fillSimpleValue for prenom
Starting fillSimpleValue for id
Starting fillSimpleValue for date_debut
Starting fillSimpleValue for date_fin
Starting fillSimpleValue for delai
Starting fillSimpleValue for id
Starting fillSimpleValue for auteur
Starting fillSimpleValue for titre
Forcing column [id] to be non-null as it is part of the primary key for table [client]
Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
Forcing column [id] to be non-null as it is part of the primary key for table [livre]
Second pass for collection: objets.Emprunt.livres
Binding as ManyToMany: objets.Emprunt.livres
Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
Mapped collection key: ID_EMP, element: ID_LIV
Second pass for collection: objets.Client.emprunts
Binding a OneToMany: objets.Client.emprunts through a foreign key
Mapping collection: objets.Client.emprunts -> EMPRUNT
Retrieving property objets.Emprunt.client
Mapped collection key: id_client, one-to-many: objets.Emprunt
Second pass for collection: objets.Livre.emprunts
Binding as ManyToMany: objets.Livre.emprunts
Retrieving property objets.Emprunt.livres
Mapped collection key: ID_LIV, element: ID_EMP
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@295cf707
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@258d79be, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Static SQL for collection: objets.Livre.emprunts
 Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
 Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
 Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
 One-shot delete: delete from COMPO where ID_LIV=?
Static SQL for collection: objets.Client.emprunts
 Row insert: update EMPRUNT set id_client=? where id=?
 Row update: update EMPRUNT set  where id=?
 Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
 One-shot delete: update EMPRUNT set id_client=null where id_client=?
Static SQL for collection: objets.Emprunt.livres
 Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
 Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
 Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
 One-shot delete: delete from COMPO where ID_EMP=?
Static SQL for entity: objets.Client
 Version select: select id from CLIENT where id =?
 Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
 Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
 Update 0: update CLIENT set nom=?, prenom=? where id=?
 Delete 0: delete from CLIENT where id=?
 Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8d96d9]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178213b]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b765a2c]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ebf0f36]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807bdeb]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6492fab5]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a8312f]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c532cd8]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51972dc7]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2002348]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31000e60]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static SQL for entity: objets.Emprunt
 Version select: select id from EMPRUNT where id =?
 Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
 Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
 Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
 Delete 0: delete from EMPRUNT where id=?
 Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13518f37]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f48b3d2]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f8285e]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3724af13]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b53bcc2]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a43ce46]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2320fa6f]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static SQL for entity: objets.Livre
 Version select: select id from livre where id =?
 Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
 Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
 Update 0: update livre set auteur=?, titre=? where id=?
 Delete 0: delete from livre where id=?
 Identity insert: insert into livre (auteur, titre) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366c4480]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c11eee]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681a8b4e]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c08c46a]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708400f6]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4218500f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2c4efb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2db68f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4205be]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e22bdd]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a67a45]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Property path deemed to be circular : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b9df8a]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8ac0e1]
Visiting attribute path : client
Property path deemed to be circular : client
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@235a0c16]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f4d54]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Property path deemed to be circular : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Instantiated session factory
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c5ee75e
Registering SessionFactory: d7f15627-24a6-44be-90fa-9ea2f4193021 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@a776e
Registering EntityManagerFactory: pu_essai 
Statistics initialized [enabled=false]
begin
select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Livre#4]
Done materializing entity [objets.Livre#4]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Livre#4
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c0fae6c
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Livre (l) -> livre0_
Resolved : l -> livre0_.id
Resolved : l -> livre0_.id
getDataType() : titre -> org.hibernate.type.StringType@13c10b87
Resolved : l.titre -> livre0_.titre
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
Using FROM fragment [livre livre0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

throwQueryException() : no errors
HQL: select l from objets.Livre l where l.titre='Germinal' 
SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
Result set row: 0
Result row: EntityKey[objets.Livre#2]
Resolving associations for [objets.Livre#2]
Done materializing entity [objets.Livre#2]
Livre 2 :  Germinal redige par Emile Zola
parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
Resolved : emp -> emprunt0_.id
Resolved : emp -> emprunt0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : emp.id -> emprunt0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
Using FROM fragment [EMPRUNT emprunt0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select emp from objets.Emprunt emp where emp.id=:ref
SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Result set row: 0
Result row: EntityKey[objets.Emprunt#1]
Resolving associations for [objets.Emprunt#1]
select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Client#1]
Done materializing entity [objets.Client#1]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Client#1
Done materializing entity [objets.Emprunt#1]
Loading collection: [objets.Emprunt.livres#1]
select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Preparing collection intializer : [objets.Emprunt.livres#1]
Starting ResultSet row #0
Found row of collection: [objets.Emprunt.livres#1]
Starting ResultSet row #1
Found row of collection: [objets.Emprunt.livres#1]
Resolving associations for [objets.Livre#1]
Done materializing entity [objets.Livre#1]
1 collections were found in result set for role: objets.Emprunt.livres
Collection fully initialized: [objets.Emprunt.livres#1]
1 collections initialized for role: objets.Emprunt.livres
HHH000387: ResultSet's statement was not registered
Done loading collection
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
parse() - HQL: select client from objets.Client client where client.id=:id_ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Client (client) -> client0_
Resolved : client -> client0_.id
Resolved : client -> client0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : client.id -> client0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
Using FROM fragment [CLIENT client0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select client from objets.Client client where client.id=:id_ref
SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#1, objets.Livre#4]}
objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
Result set row: 0
Result row: EntityKey[objets.Client#1]
Loading collection: [objets.Client.emprunts#1]
select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Preparing collection intializer : [objets.Client.emprunts#1]
Starting ResultSet row #0
Found row of collection: [objets.Client.emprunts#1]
Starting ResultSet row #1
Found row of collection: [objets.Client.emprunts#1]
Resolving associations for [objets.Emprunt#4]
Done materializing entity [objets.Emprunt#4]
1 collections were found in result set for role: objets.Client.emprunts
Collection fully initialized: [objets.Client.emprunts#1]
1 collections initialized for role: objets.Client.emprunts
HHH000387: ResultSet's statement was not registered
Done loading collection
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=pu_essai
Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Incoming config yielded no classloaders; adding standard SE ones
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5906ebcb
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6646153
Adding type registration yes_no -> org.hibernate.type.YesNoType@6295d394
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration char -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c417213
Adding type registration integer -> org.hibernate.type.IntegerType@60611244
Adding type registration int -> org.hibernate.type.IntegerType@60611244
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60611244
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@fdefd3f
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1198b989
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@197d671
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@197d671
Adding type registration string -> org.hibernate.type.StringType@13c10b87
Adding type registration java.lang.String -> org.hibernate.type.StringType@13c10b87
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fc2413d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23986957
Adding type registration url -> org.hibernate.type.UrlType@60704c
Adding type registration java.net.URL -> org.hibernate.type.UrlType@60704c
Adding type registration date -> org.hibernate.type.DateType@2805c96b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2805c96b
Adding type registration time -> org.hibernate.type.TimeType@37918c79
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37918c79
Adding type registration timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@222114ba
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b07a0d6
Adding type registration calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45018215
Adding type registration locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration class -> org.hibernate.type.ClassType@47542153
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47542153
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54c562f7
Adding type registration binary -> org.hibernate.type.BinaryType@2f112965
Adding type registration byte[] -> org.hibernate.type.BinaryType@2f112965
Adding type registration [B -> org.hibernate.type.BinaryType@2f112965
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration image -> org.hibernate.type.ImageType@5276e6b0
Adding type registration characters -> org.hibernate.type.CharArrayType@78aab498
Adding type registration char[] -> org.hibernate.type.CharArrayType@78aab498
Adding type registration [C -> org.hibernate.type.CharArrayType@78aab498
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration text -> org.hibernate.type.TextType@5e316c74
Adding type registration ntext -> org.hibernate.type.NTextType@7f010382
Adding type registration blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78e117e3
Adding type registration clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration nclob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@418e7838
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cd3fee8
Adding type registration serializable -> org.hibernate.type.SerializableType@3e92efc3
Adding type registration object -> org.hibernate.type.ObjectType@353d0772
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@353d0772
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57c758ac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a9cd3b1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13e39c73
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64cd705f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9225652
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@654f0d9c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a400542
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6580cfdd
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: objets.Client
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Client
Bind entity objets.Client on table CLIENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Collection role: objets.Client.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
building SimpleValue for nom
Building property nom
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property prenom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
building SimpleValue for prenom
Building property prenom
Binding entity from annotated class: objets.Emprunt
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Emprunt
Bind entity objets.Emprunt on table EMPRUNT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
Building property client
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_debut with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
building SimpleValue for date_debut
Building property date_debut
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_fin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
building SimpleValue for date_fin
Building property date_fin
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property delai with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
building SimpleValue for delai
Building property delai
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
Collection role: objets.Emprunt.livres
Building property livres
Binding entity from annotated class: objets.Livre
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Livre
Bind entity objets.Livre on table livre
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property auteur with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
building SimpleValue for auteur
Building property auteur
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Collection role: objets.Livre.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property titre with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
building SimpleValue for titre
Building property titre
Starting fillSimpleValue for id
Starting fillSimpleValue for nom
Starting fillSimpleValue for prenom
Starting fillSimpleValue for id
Starting fillSimpleValue for date_debut
Starting fillSimpleValue for date_fin
Starting fillSimpleValue for delai
Starting fillSimpleValue for id
Starting fillSimpleValue for auteur
Starting fillSimpleValue for titre
Forcing column [id] to be non-null as it is part of the primary key for table [client]
Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
Forcing column [id] to be non-null as it is part of the primary key for table [livre]
Second pass for collection: objets.Emprunt.livres
Binding as ManyToMany: objets.Emprunt.livres
Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
Mapped collection key: ID_EMP, element: ID_LIV
Second pass for collection: objets.Client.emprunts
Binding a OneToMany: objets.Client.emprunts through a foreign key
Mapping collection: objets.Client.emprunts -> EMPRUNT
Retrieving property objets.Emprunt.client
Mapped collection key: id_client, one-to-many: objets.Emprunt
Second pass for collection: objets.Livre.emprunts
Binding as ManyToMany: objets.Livre.emprunts
Retrieving property objets.Emprunt.livres
Mapped collection key: ID_LIV, element: ID_EMP
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@295cf707
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@258d79be, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Static SQL for collection: objets.Livre.emprunts
 Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
 Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
 Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
 One-shot delete: delete from COMPO where ID_LIV=?
Static SQL for collection: objets.Client.emprunts
 Row insert: update EMPRUNT set id_client=? where id=?
 Row update: update EMPRUNT set  where id=?
 Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
 One-shot delete: update EMPRUNT set id_client=null where id_client=?
Static SQL for collection: objets.Emprunt.livres
 Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
 Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
 Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
 One-shot delete: delete from COMPO where ID_EMP=?
Static SQL for entity: objets.Client
 Version select: select id from CLIENT where id =?
 Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
 Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
 Update 0: update CLIENT set nom=?, prenom=? where id=?
 Delete 0: delete from CLIENT where id=?
 Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8d96d9]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178213b]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b765a2c]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ebf0f36]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807bdeb]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6492fab5]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a8312f]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c532cd8]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51972dc7]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2002348]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31000e60]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static SQL for entity: objets.Emprunt
 Version select: select id from EMPRUNT where id =?
 Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
 Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
 Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
 Delete 0: delete from EMPRUNT where id=?
 Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13518f37]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f48b3d2]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f8285e]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3724af13]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b53bcc2]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a43ce46]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2320fa6f]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static SQL for entity: objets.Livre
 Version select: select id from livre where id =?
 Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
 Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
 Update 0: update livre set auteur=?, titre=? where id=?
 Delete 0: delete from livre where id=?
 Identity insert: insert into livre (auteur, titre) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366c4480]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c11eee]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681a8b4e]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c08c46a]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708400f6]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4218500f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2c4efb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2db68f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4205be]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e22bdd]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a67a45]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Property path deemed to be circular : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b9df8a]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8ac0e1]
Visiting attribute path : client
Property path deemed to be circular : client
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@235a0c16]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f4d54]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Property path deemed to be circular : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Instantiated session factory
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c5ee75e
Registering SessionFactory: 77b26fe1-1a21-4e93-9db3-322ef39f0dad (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@a776e
Registering EntityManagerFactory: pu_essai 
Statistics initialized [enabled=false]
begin
select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Livre#4]
Done materializing entity [objets.Livre#4]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Livre#4
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c0fae6c
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Livre (l) -> livre0_
Resolved : l -> livre0_.id
Resolved : l -> livre0_.id
getDataType() : titre -> org.hibernate.type.StringType@13c10b87
Resolved : l.titre -> livre0_.titre
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
Using FROM fragment [livre livre0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

throwQueryException() : no errors
HQL: select l from objets.Livre l where l.titre='Germinal' 
SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
Result set row: 0
Result row: EntityKey[objets.Livre#2]
Resolving associations for [objets.Livre#2]
Done materializing entity [objets.Livre#2]
Livre 2 :  Germinal redige par Emile Zola
parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
Resolved : emp -> emprunt0_.id
Resolved : emp -> emprunt0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : emp.id -> emprunt0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
Using FROM fragment [EMPRUNT emprunt0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select emp from objets.Emprunt emp where emp.id=:ref
SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Result set row: 0
Result row: EntityKey[objets.Emprunt#1]
Resolving associations for [objets.Emprunt#1]
select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Client#1]
Done materializing entity [objets.Client#1]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Client#1
Done materializing entity [objets.Emprunt#1]
Loading collection: [objets.Emprunt.livres#1]
select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Preparing collection intializer : [objets.Emprunt.livres#1]
Starting ResultSet row #0
Found row of collection: [objets.Emprunt.livres#1]
Starting ResultSet row #1
Found row of collection: [objets.Emprunt.livres#1]
Resolving associations for [objets.Livre#1]
Done materializing entity [objets.Livre#1]
1 collections were found in result set for role: objets.Emprunt.livres
Collection fully initialized: [objets.Emprunt.livres#1]
1 collections initialized for role: objets.Emprunt.livres
HHH000387: ResultSet's statement was not registered
Done loading collection
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
parse() - HQL: select client from objets.Client client where client.id=:id_ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Client (client) -> client0_
Resolved : client -> client0_.id
Resolved : client -> client0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : client.id -> client0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
Using FROM fragment [CLIENT client0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select client from objets.Client client where client.id=:id_ref
SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#1, objets.Livre#4]}
objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
Result set row: 0
Result row: EntityKey[objets.Client#1]
Loading collection: [objets.Client.emprunts#1]
select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Preparing collection intializer : [objets.Client.emprunts#1]
Starting ResultSet row #0
Found row of collection: [objets.Client.emprunts#1]
Starting ResultSet row #1
Found row of collection: [objets.Client.emprunts#1]
Resolving associations for [objets.Emprunt#4]
Done materializing entity [objets.Emprunt#4]
1 collections were found in result set for role: objets.Client.emprunts
Collection fully initialized: [objets.Client.emprunts#1]
1 collections initialized for role: objets.Client.emprunts
HHH000387: ResultSet's statement was not registered
Done loading collection
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=pu_essai
Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Incoming config yielded no classloaders; adding standard SE ones
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5906ebcb
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6646153
Adding type registration yes_no -> org.hibernate.type.YesNoType@6295d394
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration char -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c417213
Adding type registration integer -> org.hibernate.type.IntegerType@60611244
Adding type registration int -> org.hibernate.type.IntegerType@60611244
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60611244
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@fdefd3f
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1198b989
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@197d671
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@197d671
Adding type registration string -> org.hibernate.type.StringType@13c10b87
Adding type registration java.lang.String -> org.hibernate.type.StringType@13c10b87
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fc2413d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23986957
Adding type registration url -> org.hibernate.type.UrlType@60704c
Adding type registration java.net.URL -> org.hibernate.type.UrlType@60704c
Adding type registration date -> org.hibernate.type.DateType@2805c96b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2805c96b
Adding type registration time -> org.hibernate.type.TimeType@37918c79
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37918c79
Adding type registration timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@222114ba
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b07a0d6
Adding type registration calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45018215
Adding type registration locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration class -> org.hibernate.type.ClassType@47542153
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47542153
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54c562f7
Adding type registration binary -> org.hibernate.type.BinaryType@2f112965
Adding type registration byte[] -> org.hibernate.type.BinaryType@2f112965
Adding type registration [B -> org.hibernate.type.BinaryType@2f112965
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration image -> org.hibernate.type.ImageType@5276e6b0
Adding type registration characters -> org.hibernate.type.CharArrayType@78aab498
Adding type registration char[] -> org.hibernate.type.CharArrayType@78aab498
Adding type registration [C -> org.hibernate.type.CharArrayType@78aab498
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration text -> org.hibernate.type.TextType@5e316c74
Adding type registration ntext -> org.hibernate.type.NTextType@7f010382
Adding type registration blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78e117e3
Adding type registration clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration nclob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@418e7838
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cd3fee8
Adding type registration serializable -> org.hibernate.type.SerializableType@3e92efc3
Adding type registration object -> org.hibernate.type.ObjectType@353d0772
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@353d0772
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57c758ac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a9cd3b1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13e39c73
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64cd705f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9225652
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@654f0d9c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a400542
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6580cfdd
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: objets.Client
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Client
Bind entity objets.Client on table CLIENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Collection role: objets.Client.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
building SimpleValue for nom
Building property nom
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property prenom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
building SimpleValue for prenom
Building property prenom
Binding entity from annotated class: objets.Emprunt
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Emprunt
Bind entity objets.Emprunt on table EMPRUNT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
Building property client
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_debut with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
building SimpleValue for date_debut
Building property date_debut
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_fin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
building SimpleValue for date_fin
Building property date_fin
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property delai with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
building SimpleValue for delai
Building property delai
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
Collection role: objets.Emprunt.livres
Building property livres
Binding entity from annotated class: objets.Livre
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Livre
Bind entity objets.Livre on table livre
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property auteur with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
building SimpleValue for auteur
Building property auteur
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Collection role: objets.Livre.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property titre with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
building SimpleValue for titre
Building property titre
Starting fillSimpleValue for id
Starting fillSimpleValue for nom
Starting fillSimpleValue for prenom
Starting fillSimpleValue for id
Starting fillSimpleValue for date_debut
Starting fillSimpleValue for date_fin
Starting fillSimpleValue for delai
Starting fillSimpleValue for id
Starting fillSimpleValue for auteur
Starting fillSimpleValue for titre
Forcing column [id] to be non-null as it is part of the primary key for table [client]
Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
Forcing column [id] to be non-null as it is part of the primary key for table [livre]
Second pass for collection: objets.Emprunt.livres
Binding as ManyToMany: objets.Emprunt.livres
Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
Mapped collection key: ID_EMP, element: ID_LIV
Second pass for collection: objets.Client.emprunts
Binding a OneToMany: objets.Client.emprunts through a foreign key
Mapping collection: objets.Client.emprunts -> EMPRUNT
Retrieving property objets.Emprunt.client
Mapped collection key: id_client, one-to-many: objets.Emprunt
Second pass for collection: objets.Livre.emprunts
Binding as ManyToMany: objets.Livre.emprunts
Retrieving property objets.Emprunt.livres
Mapped collection key: ID_LIV, element: ID_EMP
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@295cf707
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@258d79be, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Static SQL for collection: objets.Livre.emprunts
 Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
 Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
 Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
 One-shot delete: delete from COMPO where ID_LIV=?
Static SQL for collection: objets.Client.emprunts
 Row insert: update EMPRUNT set id_client=? where id=?
 Row update: update EMPRUNT set  where id=?
 Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
 One-shot delete: update EMPRUNT set id_client=null where id_client=?
Static SQL for collection: objets.Emprunt.livres
 Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
 Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
 Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
 One-shot delete: delete from COMPO where ID_EMP=?
Static SQL for entity: objets.Client
 Version select: select id from CLIENT where id =?
 Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
 Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
 Update 0: update CLIENT set nom=?, prenom=? where id=?
 Delete 0: delete from CLIENT where id=?
 Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8d96d9]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178213b]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b765a2c]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ebf0f36]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807bdeb]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6492fab5]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a8312f]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c532cd8]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51972dc7]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2002348]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31000e60]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static SQL for entity: objets.Emprunt
 Version select: select id from EMPRUNT where id =?
 Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
 Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
 Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
 Delete 0: delete from EMPRUNT where id=?
 Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13518f37]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f48b3d2]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f8285e]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3724af13]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b53bcc2]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a43ce46]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2320fa6f]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static SQL for entity: objets.Livre
 Version select: select id from livre where id =?
 Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
 Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
 Update 0: update livre set auteur=?, titre=? where id=?
 Delete 0: delete from livre where id=?
 Identity insert: insert into livre (auteur, titre) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366c4480]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c11eee]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681a8b4e]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c08c46a]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708400f6]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4218500f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2c4efb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2db68f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4205be]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e22bdd]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a67a45]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Property path deemed to be circular : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b9df8a]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8ac0e1]
Visiting attribute path : client
Property path deemed to be circular : client
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@235a0c16]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f4d54]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Property path deemed to be circular : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Instantiated session factory
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c5ee75e
Registering SessionFactory: e6cc15aa-ced3-41ca-958b-e1d4a21eb408 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@a776e
Registering EntityManagerFactory: pu_essai 
Statistics initialized [enabled=false]
begin
select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Livre#4]
Done materializing entity [objets.Livre#4]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Livre#4
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c0fae6c
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Livre (l) -> livre0_
Resolved : l -> livre0_.id
Resolved : l -> livre0_.id
getDataType() : titre -> org.hibernate.type.StringType@13c10b87
Resolved : l.titre -> livre0_.titre
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
Using FROM fragment [livre livre0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

throwQueryException() : no errors
HQL: select l from objets.Livre l where l.titre='Germinal' 
SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
Result set row: 0
Result row: EntityKey[objets.Livre#2]
Resolving associations for [objets.Livre#2]
Done materializing entity [objets.Livre#2]
Livre 2 :  Germinal redige par Emile Zola
parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
Resolved : emp -> emprunt0_.id
Resolved : emp -> emprunt0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : emp.id -> emprunt0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
Using FROM fragment [EMPRUNT emprunt0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select emp from objets.Emprunt emp where emp.id=:ref
SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Result set row: 0
Result row: EntityKey[objets.Emprunt#1]
Resolving associations for [objets.Emprunt#1]
select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Client#1]
Done materializing entity [objets.Client#1]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Client#1
Done materializing entity [objets.Emprunt#1]
Loading collection: [objets.Emprunt.livres#1]
select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Preparing collection intializer : [objets.Emprunt.livres#1]
Starting ResultSet row #0
Found row of collection: [objets.Emprunt.livres#1]
Starting ResultSet row #1
Found row of collection: [objets.Emprunt.livres#1]
Resolving associations for [objets.Livre#1]
Done materializing entity [objets.Livre#1]
1 collections were found in result set for role: objets.Emprunt.livres
Collection fully initialized: [objets.Emprunt.livres#1]
1 collections initialized for role: objets.Emprunt.livres
HHH000387: ResultSet's statement was not registered
Done loading collection
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
parse() - HQL: select client from objets.Client client where client.id=:id_ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Client (client) -> client0_
Resolved : client -> client0_.id
Resolved : client -> client0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : client.id -> client0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
Using FROM fragment [CLIENT client0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select client from objets.Client client where client.id=:id_ref
SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#1, objets.Livre#4]}
objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
Result set row: 0
Result row: EntityKey[objets.Client#1]
Loading collection: [objets.Client.emprunts#1]
select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Preparing collection intializer : [objets.Client.emprunts#1]
Starting ResultSet row #0
Found row of collection: [objets.Client.emprunts#1]
Starting ResultSet row #1
Found row of collection: [objets.Client.emprunts#1]
Resolving associations for [objets.Emprunt#4]
Done materializing entity [objets.Emprunt#4]
1 collections were found in result set for role: objets.Client.emprunts
Collection fully initialized: [objets.Client.emprunts#1]
1 collections initialized for role: objets.Client.emprunts
HHH000387: ResultSet's statement was not registered
Done loading collection
Emprunt 4 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 21 jour(s) de 2018-01-03 00:00:00.0 a null
Emprunt 1 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 15 jour(s) de 2017-11-12 00:00:00.0 a 2017-11-18 00:00:00.0
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=pu_essai
16:54:30.117 [main] DEBUG org.jboss.logging Logging Provider: org.jboss.logging.Slf4jLoggerProvider
16:54:30.152 [main] DEBUG o.h.b.r.c.i.ClassLoaderServiceImpl Incoming config yielded no classloaders; adding standard SE ones
16:54:30.205 [main] DEBUG o.h.jpa.HibernatePersistenceProvider Located and parsed 1 persistence units; checking each
16:54:30.205 [main] DEBUG o.h.jpa.HibernatePersistenceProvider Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
16:54:30.210 [main] DEBUG o.h.jpa.boot.spi.ProviderChecker Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
16:54:30.216 [main] DEBUG o.h.jpa.internal.util.LogHelper PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
16:54:30.223 [main] DEBUG o.h.i.internal.IntegratorServiceImpl Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
16:54:30.224 [main] DEBUG o.h.i.internal.IntegratorServiceImpl Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
16:54:30.226 [main] DEBUG o.h.i.internal.IntegratorServiceImpl Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
16:54:30.226 [main] DEBUG o.h.i.internal.IntegratorServiceImpl Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
16:54:30.267 [main] INFO  org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final}
16:54:30.268 [main] INFO  org.hibernate.cfg.Environment HHH000206: hibernate.properties not found
16:54:30.269 [main] INFO  org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist
16:54:30.276 [main] DEBUG o.h.service.spi.ServiceBinding Overriding existing service binding [org.hibernate.secure.spi.JaccService]
16:54:30.291 [main] DEBUG o.h.c.i.RegionFactoryInitiator Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
16:54:30.297 [main] INFO  o.h.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
16:54:30.390 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:54:30.390 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration boolean -> org.hibernate.type.BooleanType@6646153
16:54:30.390 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6646153
16:54:30.391 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@657c8ad9
16:54:30.392 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ad851c9
16:54:30.392 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration yes_no -> org.hibernate.type.YesNoType@b62fe6d
16:54:30.393 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:54:30.394 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration byte -> org.hibernate.type.ByteType@7c417213
16:54:30.394 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c417213
16:54:30.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration character -> org.hibernate.type.CharacterType@60611244
16:54:30.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration char -> org.hibernate.type.CharacterType@60611244
16:54:30.395 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60611244
16:54:30.396 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:54:30.396 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration short -> org.hibernate.type.ShortType@fdefd3f
16:54:30.396 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fdefd3f
16:54:30.397 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration integer -> org.hibernate.type.IntegerType@7a52f2a2
16:54:30.397 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration int -> org.hibernate.type.IntegerType@7a52f2a2
16:54:30.397 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7a52f2a2
16:54:30.398 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:54:30.398 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration long -> org.hibernate.type.LongType@6e75aa0d
16:54:30.398 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e75aa0d
16:54:30.399 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:54:30.400 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration float -> org.hibernate.type.FloatType@4b44655e
16:54:30.400 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b44655e
16:54:30.401 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:54:30.401 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration double -> org.hibernate.type.DoubleType@6b4a4e18
16:54:30.401 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6b4a4e18
16:54:30.402 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a955565
16:54:30.402 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a955565
16:54:30.403 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration big_integer -> org.hibernate.type.BigIntegerType@70be0a2b
16:54:30.403 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@70be0a2b
16:54:30.404 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration string -> org.hibernate.type.StringType@1e730495
16:54:30.404 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.String -> org.hibernate.type.StringType@1e730495
16:54:30.405 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2a32de6c
16:54:30.406 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23529fee
16:54:30.406 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration url -> org.hibernate.type.UrlType@5bfa9431
16:54:30.406 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.net.URL -> org.hibernate.type.UrlType@5bfa9431
16:54:30.407 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration date -> org.hibernate.type.DateType@3c72f59f
16:54:30.408 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c72f59f
16:54:30.409 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration time -> org.hibernate.type.TimeType@3901d134
16:54:30.409 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3901d134
16:54:30.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:54:30.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65d6b83b
16:54:30.410 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65d6b83b
16:54:30.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79efed2d
16:54:30.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration calendar -> org.hibernate.type.CalendarType@4278a03f
16:54:30.411 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4278a03f
16:54:30.412 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4278a03f
16:54:30.412 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@124c278f
16:54:30.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration locale -> org.hibernate.type.LocaleType@6973bf95
16:54:30.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6973bf95
16:54:30.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:54:30.413 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a4ccb53
16:54:30.414 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration timezone -> org.hibernate.type.TimeZoneType@45b9a632
16:54:30.414 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45b9a632
16:54:30.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration class -> org.hibernate.type.ClassType@54c562f7
16:54:30.415 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54c562f7
16:54:30.416 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:54:30.416 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbf180e
16:54:30.416 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@419c5f1a
16:54:30.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration binary -> org.hibernate.type.BinaryType@6193932a
16:54:30.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration byte[] -> org.hibernate.type.BinaryType@6193932a
16:54:30.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration [B -> org.hibernate.type.BinaryType@6193932a
16:54:30.417 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:54:30.418 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:54:30.418 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ffe63b9
16:54:30.418 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration image -> org.hibernate.type.ImageType@1677d1
16:54:30.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration characters -> org.hibernate.type.CharArrayType@75329a49
16:54:30.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration char[] -> org.hibernate.type.CharArrayType@75329a49
16:54:30.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration [C -> org.hibernate.type.CharArrayType@75329a49
16:54:30.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6faea6
16:54:30.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6faea6
16:54:30.419 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6faea6
16:54:30.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration text -> org.hibernate.type.TextType@56528192
16:54:30.420 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration ntext -> org.hibernate.type.NTextType@1f3f4916
16:54:30.423 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration blob -> org.hibernate.type.BlobType@460d0a57
16:54:30.423 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460d0a57
16:54:30.424 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3aefe5e5
16:54:30.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration clob -> org.hibernate.type.ClobType@769f71a9
16:54:30.426 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@769f71a9
16:54:30.428 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration nclob -> org.hibernate.type.NClobType@1622f1b
16:54:30.429 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1622f1b
16:54:30.429 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70e8f8e
16:54:30.430 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@29626d54
16:54:30.431 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration serializable -> org.hibernate.type.SerializableType@4b0b0854
16:54:30.432 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration object -> org.hibernate.type.ObjectType@63355449
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@63355449
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@48ae9b55
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1700915
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21de60b4
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c267ef4
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@30ee2816
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31d7b7bf
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@635eaaf1
16:54:30.433 [main] DEBUG org.hibernate.type.BasicTypeRegistry Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c30a9b0
16:54:30.439 [main] WARN  org.hibernate.orm.connections HHH10001002: Using Hibernate built-in connection pool (not for production use!)
16:54:30.442 [main] INFO  org.hibernate.orm.connections HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
16:54:30.442 [main] INFO  org.hibernate.orm.connections HHH10001001: Connection properties: {user=root}
16:54:30.442 [main] INFO  org.hibernate.orm.connections HHH10001003: Autocommit mode: false
16:54:30.444 [main] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl Initializing Connection pool with 1 Connections
16:54:30.444 [main] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1)
16:54:30.475 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
16:54:30.475 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
16:54:30.475 [main] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator JDBC version : 4.0
16:54:30.482 [main] INFO  org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
16:54:30.491 [main] DEBUG o.h.e.j.c.i.StandardRefCursorSupport Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
16:54:30.500 [main] DEBUG o.h.e.j.e.s.IdentifierHelperBuilder IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
16:54:30.557 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
16:54:30.557 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
16:54:30.558 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
16:54:30.558 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
16:54:30.558 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
16:54:30.559 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
16:54:30.559 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
16:54:30.560 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:54:30.560 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
16:54:30.560 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
16:54:30.561 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
16:54:30.561 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
16:54:30.561 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
16:54:30.561 [main] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
16:54:30.581 [main] DEBUG o.h.boot.model.relational.Namespace Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
16:54:30.602 [main] DEBUG org.hibernate.cfg.AnnotationBinder Binding entity from annotated class: objets.Client
16:54:30.616 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:54:30.619 [main] DEBUG o.h.cfg.annotations.EntityBinder Import with entity name Client
16:54:30.621 [main] DEBUG o.h.cfg.annotations.EntityBinder Bind entity objets.Client on table CLIENT
16:54:30.645 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:54:30.646 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property id with lazy=false
16:54:30.647 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
16:54:30.648 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for id
16:54:30.649 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property id
16:54:30.652 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
16:54:30.653 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
16:54:30.653 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
16:54:30.659 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
16:54:30.659 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
16:54:30.659 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
16:54:30.660 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
16:54:30.660 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
16:54:30.661 [main] DEBUG o.h.cfg.annotations.CollectionBinder Collection role: objets.Client.emprunts
16:54:30.662 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property emprunts
16:54:30.662 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
16:54:30.662 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property nom with lazy=false
16:54:30.662 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
16:54:30.662 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for nom
16:54:30.663 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property nom
16:54:30.663 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
16:54:30.663 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property prenom with lazy=false
16:54:30.663 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
16:54:30.663 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for prenom
16:54:30.663 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property prenom
16:54:30.664 [main] DEBUG org.hibernate.cfg.AnnotationBinder Binding entity from annotated class: objets.Emprunt
16:54:30.664 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:54:30.664 [main] DEBUG o.h.cfg.annotations.EntityBinder Import with entity name Emprunt
16:54:30.664 [main] DEBUG o.h.cfg.annotations.EntityBinder Bind entity objets.Emprunt on table EMPRUNT
16:54:30.670 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:54:30.670 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property id with lazy=false
16:54:30.670 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
16:54:30.670 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for id
16:54:30.670 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property id
16:54:30.671 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
16:54:30.671 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
16:54:30.672 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property client
16:54:30.672 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
16:54:30.673 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property date_debut with lazy=false
16:54:30.673 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
16:54:30.673 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for date_debut
16:54:30.673 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property date_debut
16:54:30.673 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
16:54:30.673 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property date_fin with lazy=false
16:54:30.673 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
16:54:30.673 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for date_fin
16:54:30.673 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property date_fin
16:54:30.673 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
16:54:30.673 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property delai with lazy=false
16:54:30.673 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
16:54:30.673 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for delai
16:54:30.673 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property delai
16:54:30.674 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
16:54:30.674 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
16:54:30.674 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
16:54:30.674 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
16:54:30.674 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
16:54:30.674 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
16:54:30.674 [main] DEBUG o.h.cfg.annotations.CollectionBinder Collection role: objets.Emprunt.livres
16:54:30.674 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property livres
16:54:30.675 [main] DEBUG org.hibernate.cfg.AnnotationBinder Binding entity from annotated class: objets.Livre
16:54:30.675 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
16:54:30.675 [main] DEBUG o.h.cfg.annotations.EntityBinder Import with entity name Livre
16:54:30.675 [main] DEBUG o.h.cfg.annotations.EntityBinder Bind entity objets.Livre on table livre
16:54:30.675 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
16:54:30.675 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property id with lazy=false
16:54:30.676 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
16:54:30.676 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for id
16:54:30.676 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property id
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
16:54:30.676 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property auteur with lazy=false
16:54:30.676 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
16:54:30.676 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for auteur
16:54:30.676 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property auteur
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
16:54:30.676 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
16:54:30.677 [main] DEBUG o.h.cfg.annotations.CollectionBinder Collection role: objets.Livre.emprunts
16:54:30.677 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property emprunts
16:54:30.677 [main] DEBUG org.hibernate.cfg.Ejb3Column Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
16:54:30.677 [main] DEBUG o.h.cfg.annotations.PropertyBinder MetadataSourceProcessor property titre with lazy=false
16:54:30.677 [main] DEBUG o.h.cfg.AbstractPropertyHolder Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
16:54:30.677 [main] DEBUG o.h.c.annotations.SimpleValueBinder building SimpleValue for titre
16:54:30.677 [main] DEBUG o.h.cfg.annotations.PropertyBinder Building property titre
16:54:30.677 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for id
16:54:30.677 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for nom
16:54:30.677 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for prenom
16:54:30.677 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for id
16:54:30.677 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for date_debut
16:54:30.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for date_fin
16:54:30.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for delai
16:54:30.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for id
16:54:30.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for auteur
16:54:30.678 [main] DEBUG o.h.c.annotations.SimpleValueBinder Starting fillSimpleValue for titre
16:54:30.680 [main] DEBUG org.hibernate.mapping.PrimaryKey Forcing column [id] to be non-null as it is part of the primary key for table [client]
16:54:30.680 [main] DEBUG org.hibernate.mapping.PrimaryKey Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
16:54:30.680 [main] DEBUG org.hibernate.mapping.PrimaryKey Forcing column [id] to be non-null as it is part of the primary key for table [livre]
16:54:30.680 [main] DEBUG o.hibernate.cfg.CollectionSecondPass Second pass for collection: objets.Emprunt.livres
16:54:30.680 [main] DEBUG o.h.cfg.annotations.CollectionBinder Binding as ManyToMany: objets.Emprunt.livres
16:54:30.682 [main] DEBUG org.hibernate.mapping.PrimaryKey Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
16:54:30.682 [main] DEBUG org.hibernate.mapping.PrimaryKey Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
16:54:30.682 [main] DEBUG o.hibernate.cfg.CollectionSecondPass Mapped collection key: ID_EMP, element: ID_LIV
16:54:30.682 [main] DEBUG o.hibernate.cfg.CollectionSecondPass Second pass for collection: objets.Client.emprunts
16:54:30.682 [main] DEBUG o.h.cfg.annotations.CollectionBinder Binding a OneToMany: objets.Client.emprunts through a foreign key
16:54:30.683 [main] DEBUG o.h.cfg.annotations.CollectionBinder Mapping collection: objets.Client.emprunts -> EMPRUNT
16:54:30.683 [main] DEBUG o.h.cfg.annotations.TableBinder Retrieving property objets.Emprunt.client
16:54:30.683 [main] DEBUG o.hibernate.cfg.CollectionSecondPass Mapped collection key: id_client, one-to-many: objets.Emprunt
16:54:30.683 [main] DEBUG o.hibernate.cfg.CollectionSecondPass Second pass for collection: objets.Livre.emprunts
16:54:30.683 [main] DEBUG o.h.cfg.annotations.CollectionBinder Binding as ManyToMany: objets.Livre.emprunts
16:54:30.683 [main] DEBUG o.h.cfg.annotations.TableBinder Retrieving property objets.Emprunt.livres
16:54:30.683 [main] DEBUG o.hibernate.cfg.CollectionSecondPass Mapped collection key: ID_LIV, element: ID_EMP
16:54:30.683 [main] DEBUG o.h.b.i.InFlightMetadataCollectorImpl Resolving reference to class: objets.Livre
16:54:30.685 [main] DEBUG o.h.b.i.InFlightMetadataCollectorImpl Resolving reference to class: objets.Emprunt
16:54:30.685 [main] DEBUG o.h.b.i.InFlightMetadataCollectorImpl Resolving reference to class: objets.Client
16:54:30.686 [main] DEBUG o.h.b.i.InFlightMetadataCollectorImpl Resolving reference to class: objets.Livre
16:54:30.686 [main] DEBUG o.h.b.i.InFlightMetadataCollectorImpl Resolving reference to class: objets.Emprunt
16:54:30.686 [main] DEBUG o.h.b.i.InFlightMetadataCollectorImpl Resolving reference to class: objets.Client
16:54:30.704 [main] DEBUG o.h.internal.SessionFactoryImpl Building session factory
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings SessionFactory name : null
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Automatic flush during beforeCompletion(): disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Automatic session close at end of transaction: disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Statistics: disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Deleted entity synthetic identifier rollback: disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Default entity-mode: pojo
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Check Nullability in Core (should be disabled when Bean Validation is on): enabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Allow initialization of lazy state outside session : disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Using BatchFetchStyle : LEGACY
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Default batch fetch size: -1
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Maximum outer join fetch depth: 2
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Default null ordering: NONE
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Order SQL updates by primary key: disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Order SQL inserts for batching: disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings multi-tenancy strategy : NONE
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings JTA Track by Thread: enabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Query language substitutions: {}
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings JPA query language strict compliance: disabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Named query checking : enabled
16:54:30.705 [main] DEBUG org.hibernate.cfg.Settings Second-level cache: enabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Second-level query cache: disabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6692b6c6
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Second-level cache region prefix: null
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Optimize second-level cache for minimal puts: disabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Structured second-level cache entries: disabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Second-level cache direct-reference entries: disabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Automatic eviction of collection cache: disabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings JDBC batch size: 15
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings JDBC batch updates for versioned data: enabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Scrollable result sets: enabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Wrap result sets: disabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings JDBC3 getGeneratedKeys(): enabled
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings JDBC result set fetch size: null
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Connection release mode: ON_CLOSE
16:54:30.706 [main] DEBUG org.hibernate.cfg.Settings Generate SQL with comments: disabled
16:54:30.735 [main] DEBUG o.h.internal.SessionFactoryImpl Session factory constructed with filter configurations : {}
16:54:30.735 [main] DEBUG o.h.internal.SessionFactoryImpl Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3eb77ea8, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
16:54:30.743 [main] DEBUG o.h.secure.spi.JaccIntegrator Skipping JACC integration as it was not enabled
16:54:30.745 [main] DEBUG o.hibernate.engine.spi.CascadeStyles External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
16:54:30.771 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl Not known whether passed class name [objets.Client] is safe
16:54:30.771 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
16:54:30.779 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl Not known whether passed class name [objets.Client] is safe
16:54:30.780 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
16:54:30.801 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl Not known whether passed class name [objets.Emprunt] is safe
16:54:30.801 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
16:54:30.801 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl Not known whether passed class name [objets.Emprunt] is safe
16:54:30.801 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
16:54:30.804 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl Not known whether passed class name [objets.Livre] is safe
16:54:30.804 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
16:54:30.804 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl Not known whether passed class name [objets.Livre] is safe
16:54:30.804 [main] DEBUG o.h.b.internal.ClassLoaderAccessImpl No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
16:54:30.813 [main] DEBUG o.h.p.c.AbstractCollectionPersister Static SQL for collection: objets.Livre.emprunts
16:54:30.813 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
16:54:30.813 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
16:54:30.813 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
16:54:30.813 [main] DEBUG o.h.p.c.AbstractCollectionPersister  One-shot delete: delete from COMPO where ID_LIV=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister Static SQL for collection: objets.Client.emprunts
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row insert: update EMPRUNT set id_client=? where id=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row update: update EMPRUNT set  where id=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  One-shot delete: update EMPRUNT set id_client=null where id_client=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister Static SQL for collection: objets.Emprunt.livres
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
16:54:30.814 [main] DEBUG o.h.p.c.AbstractCollectionPersister  One-shot delete: delete from COMPO where ID_EMP=?
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister Static SQL for entity: objets.Client
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Version select: select id from CLIENT where id =?
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Update 0: update CLIENT set nom=?, prenom=? where id=?
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Delete 0: delete from CLIENT where id=?
16:54:30.817 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
16:54:30.829 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@550a1967]
16:54:30.829 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.831 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.831 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.831 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.839 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.841 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.842 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:30.842 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c532cd8]
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.843 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.843 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.843 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.843 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:30.843 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51972dc7]
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.843 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.843 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.843 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.843 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
16:54:30.843 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2002348]
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.843 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.844 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.844 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.844 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.844 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
16:54:30.844 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31000e60]
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.844 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.844 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.844 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.844 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
16:54:30.844 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d09c1]
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.844 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.844 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.845 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.845 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.845 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
16:54:30.845 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65045a87]
16:54:30.845 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.845 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.845 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.845 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.845 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.845 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.845 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
16:54:30.845 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d1dee39]
16:54:30.845 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.845 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.845 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.845 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.846 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.846 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.846 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
16:54:30.846 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fc258b1]
16:54:30.846 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.846 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.846 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.846 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.846 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.846 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.846 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
16:54:30.846 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd80673]
16:54:30.846 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.846 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.846 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.846 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.847 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.847 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.847 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:30.847 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ea113a]
16:54:30.847 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.847 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : nom
16:54:30.847 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : prenom
16:54:30.847 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.847 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.847 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

16:54:30.847 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:30.856 [main] DEBUG org.hibernate.loader.Loader Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:30.856 [main] DEBUG org.hibernate.loader.Loader Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister Static SQL for entity: objets.Emprunt
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Version select: select id from EMPRUNT where id =?
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Delete 0: delete from EMPRUNT where id=?
16:54:30.856 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
16:54:30.856 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4983159f]
16:54:30.856 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.857 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f8285e]
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.emprunts
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Property path deemed to be circular : client.emprunts
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.nom
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.prenom
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.858 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.858 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.858 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.859 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

16:54:30.859 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
16:54:30.859 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
16:54:30.859 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.859 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a7cf58]
16:54:30.859 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.emprunts
16:54:30.859 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Property path deemed to be circular : client.emprunts
16:54:30.859 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.nom
16:54:30.859 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.prenom
16:54:30.859 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.860 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.860 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.860 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

16:54:30.860 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
16:54:30.860 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.860 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.860 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.860 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.860 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.861 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.861 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
16:54:30.861 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
16:54:30.861 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.861 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
16:54:30.861 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.861 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.861 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.861 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.861 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.861 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.861 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.861 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
16:54:30.862 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.862 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.862 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.862 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.862 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.862 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
16:54:30.862 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.862 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.862 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.862 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.862 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.863 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.863 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
16:54:30.863 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.863 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.863 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.863 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.863 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.863 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
16:54:30.863 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.863 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.863 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.864 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.864 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.864 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.864 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
16:54:30.864 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0c9195]
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.864 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7b5824]
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.864 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.864 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.864 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.864 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
16:54:30.864 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
16:54:30.864 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.865 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c11eee]
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.865 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.865 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.865 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.865 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
16:54:30.865 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8dcdaa]
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.865 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbe877d]
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.865 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.865 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.865 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.866 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

16:54:30.866 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
16:54:30.866 [main] DEBUG org.hibernate.loader.Loader Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
16:54:30.866 [main] DEBUG org.hibernate.loader.Loader Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister Static SQL for entity: objets.Livre
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Version select: select id from livre where id =?
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Update 0: update livre set auteur=?, titre=? where id=?
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Delete 0: delete from livre where id=?
16:54:30.866 [main] DEBUG o.h.p.entity.AbstractEntityPersister  Identity insert: insert into livre (auteur, titre) values (?, ?)
16:54:30.866 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c08c46a]
16:54:30.866 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.866 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.866 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.866 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.866 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.867 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.867 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.867 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708400f6]
16:54:30.867 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.867 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.867 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.867 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.867 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.867 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.867 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.867 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4218500f]
16:54:30.867 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.867 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.867 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.867 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.868 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.868 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.868 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
16:54:30.868 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2c4efb]
16:54:30.868 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.868 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.868 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.868 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.868 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.868 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.868 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
16:54:30.868 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2db68f]
16:54:30.868 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.868 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.869 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.869 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.869 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.869 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.869 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
16:54:30.869 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4566d049]
16:54:30.869 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.869 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.869 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.869 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.869 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.869 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.869 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
16:54:30.870 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3668d4]
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.870 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.870 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.870 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.870 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
16:54:30.870 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2cfcc2]
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.870 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.870 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.870 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.870 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
16:54:30.870 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2cc639]
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.870 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.870 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.870 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.871 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.871 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
16:54:30.871 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4097cac]
16:54:30.871 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.871 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.871 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.871 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.871 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.871 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.871 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.871 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a5b3fee]
16:54:30.871 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.871 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.871 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.871 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.871 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.872 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

16:54:30.872 [main] DEBUG o.h.loader.entity.plan.EntityLoader Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.872 [main] DEBUG org.hibernate.loader.Loader Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.872 [main] DEBUG org.hibernate.loader.Loader Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.875 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56aaaecd]
16:54:30.876 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522a32b1]
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.877 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fb6cf60]
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.emprunts
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Property path deemed to be circular : client.emprunts
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.nom
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client.prenom
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.877 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Property path deemed to be circular : livres
16:54:30.877 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.879 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.879 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

16:54:30.880 [main] DEBUG o.h.l.c.plan.CollectionLoader Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
16:54:30.880 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68044f4]
16:54:30.880 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d239ba]
16:54:30.880 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : client
16:54:30.880 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Property path deemed to be circular : client
16:54:30.880 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_debut
16:54:30.880 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : date_fin
16:54:30.880 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : delai
16:54:30.880 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : livres
16:54:30.880 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.880 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.882 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

16:54:30.882 [main] DEBUG o.h.l.c.plan.CollectionLoader Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
16:54:30.882 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c5945a7]
16:54:30.882 [main] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f05be7f]
16:54:30.882 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : auteur
16:54:30.882 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : emprunts
16:54:30.882 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Property path deemed to be circular : emprunts
16:54:30.882 [main] DEBUG o.h.p.w.spi.MetamodelGraphWalker Visiting attribute path : titre
16:54:30.882 [main] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy Building LoadPlan...
16:54:30.882 [main] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor processing queryspace <gen:0>
16:54:30.882 [main] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

16:54:30.882 [main] DEBUG o.h.l.c.plan.CollectionLoader Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
16:54:30.882 [main] DEBUG o.h.internal.SessionFactoryImpl Instantiated session factory
16:54:30.885 [main] DEBUG o.h.t.s.s.SchemaManagementToolCoordinator No actions specified; doing nothing
16:54:30.885 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator No JtaPlatform was specified, checking resolver
16:54:30.886 [main] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
16:54:30.887 [main] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
16:54:30.888 [main] DEBUG o.h.internal.NamedQueryRepository Checking 0 named HQL queries
16:54:30.888 [main] DEBUG o.h.internal.NamedQueryRepository Checking 0 named SQL queries
16:54:30.889 [main] DEBUG o.h.internal.SessionFactoryRegistry Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c3146bc
16:54:30.890 [main] DEBUG o.h.internal.SessionFactoryRegistry Registering SessionFactory: fc8cb76b-f248-432d-8f74-76c7ab5e422e (<unnamed>)
16:54:30.890 [main] DEBUG o.h.internal.SessionFactoryRegistry Not binding SessionFactory to JNDI, no JNDI name configured
16:54:30.937 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@10993713
16:54:30.937 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry Registering EntityManagerFactory: pu_essai 
16:54:30.968 [main] DEBUG o.h.s.internal.StatisticsInitiator Statistics initialized [enabled=false]
16:54:30.971 [main] DEBUG o.h.e.t.internal.TransactionImpl begin
16:54:30.977 [main] DEBUG org.hibernate.SQL select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
16:54:30.984 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Starting ResultSet row #0
16:54:30.984 [main] DEBUG o.h.l.p.e.p.i.EntityReferenceInitializerImpl On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
16:54:30.990 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Resolving associations for [objets.Livre#4]
16:54:30.995 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Done materializing entity [objets.Livre#4]
16:54:30.996 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl HHH000387: ResultSet's statement was not registered
16:54:30.996 [main] DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader Done entity load : objets.Livre#4
16:54:30.996 [main] INFO  test_jpa.jpa.App Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
16:54:31.005 [main] DEBUG o.h.h.i.QueryTranslatorFactoryInitiator QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@226642a5
16:54:31.005 [main] INFO  o.h.h.i.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory
16:54:31.024 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
16:54:31.029 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

16:54:31.029 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.043 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select << begin [level=1, statement=select]
16:54:31.050 [main] DEBUG o.h.h.internal.ast.tree.FromElement FromClause{level=1} : objets.Livre (l) -> livre0_
16:54:31.051 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : l -> livre0_.id
16:54:31.053 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : l -> livre0_.id
16:54:31.054 [main] DEBUG o.h.hql.internal.ast.tree.DotNode getDataType() : titre -> org.hibernate.type.StringType@1e730495
16:54:31.054 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : l.titre -> livre0_.titre
16:54:31.056 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select : finishing up [level=1, statement=select]
16:54:31.056 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
16:54:31.061 [main] DEBUG o.h.h.i.ast.util.JoinProcessor Using FROM fragment [livre livre0_]
16:54:31.061 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select >> end [level=1, statement=select]
16:54:31.061 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

16:54:31.061 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.065 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl HQL: select l from objets.Livre l where l.titre='Germinal' 
16:54:31.065 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
16:54:31.065 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.069 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Processing flush-time cascades
16:54:31.070 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Dirty checking collections
16:54:31.074 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
16:54:31.074 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
16:54:31.074 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
16:54:31.075 [main] DEBUG o.h.internal.util.EntityPrinter Listing entities:
16:54:31.075 [main] DEBUG o.h.internal.util.EntityPrinter objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
16:54:31.075 [main] DEBUG org.hibernate.SQL select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
16:54:31.076 [main] DEBUG org.hibernate.loader.Loader Result set row: 0
16:54:31.076 [main] DEBUG org.hibernate.loader.Loader Result row: EntityKey[objets.Livre#2]
16:54:31.077 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Resolving associations for [objets.Livre#2]
16:54:31.077 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Done materializing entity [objets.Livre#2]
16:54:31.077 [main] INFO  test_jpa.jpa.App Livre 2 :  Germinal redige par Emile Zola
16:54:31.077 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
16:54:31.078 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

16:54:31.078 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.078 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select << begin [level=1, statement=select]
16:54:31.079 [main] DEBUG o.h.h.internal.ast.tree.FromElement FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
16:54:31.079 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : emp -> emprunt0_.id
16:54:31.079 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : emp -> emprunt0_.id
16:54:31.079 [main] DEBUG o.h.hql.internal.ast.tree.DotNode getDataType() : id -> org.hibernate.type.IntegerType@7a52f2a2
16:54:31.079 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : emp.id -> emprunt0_.id
16:54:31.080 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select : finishing up [level=1, statement=select]
16:54:31.080 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
16:54:31.080 [main] DEBUG o.h.h.i.ast.util.JoinProcessor Using FROM fragment [EMPRUNT emprunt0_]
16:54:31.080 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select >> end [level=1, statement=select]
16:54:31.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@7a52f2a2}

16:54:31.080 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl HQL: select emp from objets.Emprunt emp where emp.id=:ref
16:54:31.080 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
16:54:31.080 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.084 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Processing flush-time cascades
16:54:31.084 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Dirty checking collections
16:54:31.085 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
16:54:31.085 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
16:54:31.085 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
16:54:31.085 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
16:54:31.085 [main] DEBUG o.h.internal.util.EntityPrinter Listing entities:
16:54:31.085 [main] DEBUG o.h.internal.util.EntityPrinter objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
16:54:31.085 [main] DEBUG o.h.internal.util.EntityPrinter objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
16:54:31.085 [main] DEBUG org.hibernate.SQL select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
16:54:31.085 [main] DEBUG org.hibernate.loader.Loader Result set row: 0
16:54:31.085 [main] DEBUG org.hibernate.loader.Loader Result row: EntityKey[objets.Emprunt#1]
16:54:31.087 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Resolving associations for [objets.Emprunt#1]
16:54:31.087 [main] DEBUG org.hibernate.SQL select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
16:54:31.087 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Starting ResultSet row #0
16:54:31.087 [main] DEBUG o.h.l.p.e.p.i.EntityReferenceInitializerImpl On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
16:54:31.087 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Resolving associations for [objets.Client#1]
16:54:31.088 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Done materializing entity [objets.Client#1]
16:54:31.088 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl HHH000387: ResultSet's statement was not registered
16:54:31.088 [main] DEBUG o.h.l.e.p.AbstractLoadPlanBasedEntityLoader Done entity load : objets.Client#1
16:54:31.088 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Done materializing entity [objets.Emprunt#1]
16:54:31.089 [main] DEBUG o.h.l.c.p.AbstractLoadPlanBasedCollectionInitializer Loading collection: [objets.Emprunt.livres#1]
16:54:31.089 [main] DEBUG org.hibernate.SQL select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
16:54:31.090 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Preparing collection intializer : [objets.Emprunt.livres#1]
16:54:31.091 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Starting ResultSet row #0
16:54:31.092 [main] DEBUG o.h.l.p.e.p.i.CollectionReferenceInitializerImpl Found row of collection: [objets.Emprunt.livres#1]
16:54:31.092 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Starting ResultSet row #1
16:54:31.092 [main] DEBUG o.h.l.p.e.p.i.CollectionReferenceInitializerImpl Found row of collection: [objets.Emprunt.livres#1]
16:54:31.092 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Resolving associations for [objets.Livre#1]
16:54:31.092 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Done materializing entity [objets.Livre#1]
16:54:31.092 [main] DEBUG o.h.e.l.i.CollectionLoadContext 1 collections were found in result set for role: objets.Emprunt.livres
16:54:31.092 [main] DEBUG o.h.e.l.i.CollectionLoadContext Collection fully initialized: [objets.Emprunt.livres#1]
16:54:31.092 [main] DEBUG o.h.e.l.i.CollectionLoadContext 1 collections initialized for role: objets.Emprunt.livres
16:54:31.092 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl HHH000387: ResultSet's statement was not registered
16:54:31.092 [main] DEBUG o.h.l.c.p.AbstractLoadPlanBasedCollectionInitializer Done loading collection
16:54:31.093 [main] INFO  test_jpa.jpa.App Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
16:54:31.093 [main] INFO  test_jpa.jpa.App Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
16:54:31.093 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl parse() - HQL: select client from objets.Client client where client.id=:id_ref
16:54:31.094 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

16:54:31.094 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.094 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select << begin [level=1, statement=select]
16:54:31.094 [main] DEBUG o.h.h.internal.ast.tree.FromElement FromClause{level=1} : objets.Client (client) -> client0_
16:54:31.094 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : client -> client0_.id
16:54:31.094 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : client -> client0_.id
16:54:31.094 [main] DEBUG o.h.hql.internal.ast.tree.DotNode getDataType() : id -> org.hibernate.type.IntegerType@7a52f2a2
16:54:31.094 [main] DEBUG o.h.h.i.ast.tree.FromReferenceNode Resolved : client.id -> client0_.id
16:54:31.095 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select : finishing up [level=1, statement=select]
16:54:31.095 [main] DEBUG o.h.hql.internal.ast.HqlSqlWalker processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
16:54:31.095 [main] DEBUG o.h.h.i.ast.util.JoinProcessor Using FROM fragment [CLIENT client0_]
16:54:31.095 [main] DEBUG o.h.h.i.antlr.HqlSqlBaseWalker select >> end [level=1, statement=select]
16:54:31.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@7a52f2a2}

16:54:31.095 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl HQL: select client from objets.Client client where client.id=:id_ref
16:54:31.095 [main] DEBUG o.h.h.i.ast.QueryTranslatorImpl SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
16:54:31.095 [main] DEBUG o.h.hql.internal.ast.ErrorCounter throwQueryException() : no errors
16:54:31.095 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Processing flush-time cascades
16:54:31.095 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Dirty checking collections
16:54:31.096 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
16:54:31.096 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
16:54:31.096 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
16:54:31.096 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
16:54:31.096 [main] DEBUG o.h.engine.internal.Collections Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
16:54:31.096 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
16:54:31.096 [main] DEBUG o.h.e.i.AbstractFlushingEventListener Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
16:54:31.096 [main] DEBUG o.h.internal.util.EntityPrinter Listing entities:
16:54:31.096 [main] DEBUG o.h.internal.util.EntityPrinter objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
16:54:31.096 [main] DEBUG o.h.internal.util.EntityPrinter objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#4, objets.Livre#1]}
16:54:31.096 [main] DEBUG o.h.internal.util.EntityPrinter objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
16:54:31.096 [main] DEBUG o.h.internal.util.EntityPrinter objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
16:54:31.096 [main] DEBUG o.h.internal.util.EntityPrinter objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
16:54:31.096 [main] DEBUG org.hibernate.SQL select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
16:54:31.097 [main] DEBUG org.hibernate.loader.Loader Result set row: 0
16:54:31.097 [main] DEBUG org.hibernate.loader.Loader Result row: EntityKey[objets.Client#1]
16:54:31.097 [main] DEBUG o.h.l.c.p.AbstractLoadPlanBasedCollectionInitializer Loading collection: [objets.Client.emprunts#1]
16:54:31.097 [main] DEBUG org.hibernate.SQL select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
16:54:31.098 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Preparing collection intializer : [objets.Client.emprunts#1]
16:54:31.098 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Starting ResultSet row #0
16:54:31.098 [main] DEBUG o.h.l.p.e.p.i.CollectionReferenceInitializerImpl Found row of collection: [objets.Client.emprunts#1]
16:54:31.098 [main] DEBUG o.h.l.p.e.p.i.ResultSetProcessorImpl Starting ResultSet row #1
16:54:31.098 [main] DEBUG o.h.l.p.e.p.i.CollectionReferenceInitializerImpl Found row of collection: [objets.Client.emprunts#1]
16:54:31.098 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Resolving associations for [objets.Emprunt#4]
16:54:31.099 [main] DEBUG o.h.engine.internal.TwoPhaseLoad Done materializing entity [objets.Emprunt#4]
16:54:31.099 [main] DEBUG o.h.e.l.i.CollectionLoadContext 1 collections were found in result set for role: objets.Client.emprunts
16:54:31.099 [main] DEBUG o.h.e.l.i.CollectionLoadContext Collection fully initialized: [objets.Client.emprunts#1]
16:54:31.099 [main] DEBUG o.h.e.l.i.CollectionLoadContext 1 collections initialized for role: objets.Client.emprunts
16:54:31.099 [main] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl HHH000387: ResultSet's statement was not registered
16:54:31.099 [main] DEBUG o.h.l.c.p.AbstractLoadPlanBasedCollectionInitializer Done loading collection
16:54:31.099 [main] INFO  test_jpa.jpa.App Emprunt 4 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 21 jour(s) de 2018-01-03 00:00:00.0 a null
16:54:31.099 [main] INFO  test_jpa.jpa.App Emprunt 1 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 15 jour(s) de 2017-11-12 00:00:00.0 a 2017-11-18 00:00:00.0
16:54:31.099 [main] DEBUG o.h.internal.SessionFactoryImpl HHH000031: Closing
16:54:31.099 [main] DEBUG o.h.s.i.AbstractServiceRegistryImpl Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
16:54:31.099 [main] INFO  org.hibernate.orm.connections HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
16:54:31.099 [main] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
16:54:31.100 [main] DEBUG o.h.j.i.EntityManagerFactoryRegistry Remove: name=pu_essai
Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Incoming config yielded no classloaders; adding standard SE ones
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a84f40f
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5906ebcb
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6646153
Adding type registration yes_no -> org.hibernate.type.YesNoType@6295d394
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2aa5fe93
Adding type registration character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration char -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b62fe6d
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration short -> org.hibernate.type.ShortType@7c417213
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7c417213
Adding type registration integer -> org.hibernate.type.IntegerType@60611244
Adding type registration int -> org.hibernate.type.IntegerType@60611244
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60611244
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration long -> org.hibernate.type.LongType@fdefd3f
Adding type registration java.lang.Long -> org.hibernate.type.LongType@fdefd3f
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1460a8c0
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration double -> org.hibernate.type.DoubleType@1198b989
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1198b989
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10db82ae
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@197d671
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@197d671
Adding type registration string -> org.hibernate.type.StringType@13c10b87
Adding type registration java.lang.String -> org.hibernate.type.StringType@13c10b87
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fc2413d
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23986957
Adding type registration url -> org.hibernate.type.UrlType@60704c
Adding type registration java.net.URL -> org.hibernate.type.UrlType@60704c
Adding type registration date -> org.hibernate.type.DateType@2805c96b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@2805c96b
Adding type registration time -> org.hibernate.type.TimeType@37918c79
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37918c79
Adding type registration timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@222114ba
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@222114ba
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3b07a0d6
Adding type registration calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c1d9d4b
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45018215
Adding type registration locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2928854b
Adding type registration currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@147ed70f
Adding type registration timezone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1fe20588
Adding type registration class -> org.hibernate.type.ClassType@47542153
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@47542153
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4df50bcc
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54c562f7
Adding type registration binary -> org.hibernate.type.BinaryType@2f112965
Adding type registration byte[] -> org.hibernate.type.BinaryType@2f112965
Adding type registration [B -> org.hibernate.type.BinaryType@2f112965
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@163e4e87
Adding type registration image -> org.hibernate.type.ImageType@5276e6b0
Adding type registration characters -> org.hibernate.type.CharArrayType@78aab498
Adding type registration char[] -> org.hibernate.type.CharArrayType@78aab498
Adding type registration [C -> org.hibernate.type.CharArrayType@78aab498
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12e61fe6
Adding type registration text -> org.hibernate.type.TextType@5e316c74
Adding type registration ntext -> org.hibernate.type.NTextType@7f010382
Adding type registration blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@65466a6a
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78e117e3
Adding type registration clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78b66d36
Adding type registration nclob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b5d6a01
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@418e7838
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@cd3fee8
Adding type registration serializable -> org.hibernate.type.SerializableType@3e92efc3
Adding type registration object -> org.hibernate.type.ObjectType@353d0772
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@353d0772
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57c758ac
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a9cd3b1
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@13e39c73
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64cd705f
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9225652
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@654f0d9c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a400542
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6580cfdd
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: objets.Client
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Client
Bind entity objets.Client on table CLIENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Collection role: objets.Client.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
building SimpleValue for nom
Building property nom
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property prenom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
building SimpleValue for prenom
Building property prenom
Binding entity from annotated class: objets.Emprunt
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Emprunt
Bind entity objets.Emprunt on table EMPRUNT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
Building property client
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_debut with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
building SimpleValue for date_debut
Building property date_debut
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_fin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
building SimpleValue for date_fin
Building property date_fin
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property delai with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
building SimpleValue for delai
Building property delai
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
Collection role: objets.Emprunt.livres
Building property livres
Binding entity from annotated class: objets.Livre
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Livre
Bind entity objets.Livre on table livre
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property auteur with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
building SimpleValue for auteur
Building property auteur
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Collection role: objets.Livre.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property titre with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
building SimpleValue for titre
Building property titre
Starting fillSimpleValue for id
Starting fillSimpleValue for nom
Starting fillSimpleValue for prenom
Starting fillSimpleValue for id
Starting fillSimpleValue for date_debut
Starting fillSimpleValue for date_fin
Starting fillSimpleValue for delai
Starting fillSimpleValue for id
Starting fillSimpleValue for auteur
Starting fillSimpleValue for titre
Forcing column [id] to be non-null as it is part of the primary key for table [client]
Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
Forcing column [id] to be non-null as it is part of the primary key for table [livre]
Second pass for collection: objets.Emprunt.livres
Binding as ManyToMany: objets.Emprunt.livres
Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
Mapped collection key: ID_EMP, element: ID_LIV
Second pass for collection: objets.Client.emprunts
Binding a OneToMany: objets.Client.emprunts through a foreign key
Mapping collection: objets.Client.emprunts -> EMPRUNT
Retrieving property objets.Emprunt.client
Mapped collection key: id_client, one-to-many: objets.Emprunt
Second pass for collection: objets.Livre.emprunts
Binding as ManyToMany: objets.Livre.emprunts
Retrieving property objets.Emprunt.livres
Mapped collection key: ID_LIV, element: ID_EMP
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@295cf707
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@258d79be, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Static SQL for collection: objets.Livre.emprunts
 Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
 Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
 Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
 One-shot delete: delete from COMPO where ID_LIV=?
Static SQL for collection: objets.Client.emprunts
 Row insert: update EMPRUNT set id_client=? where id=?
 Row update: update EMPRUNT set  where id=?
 Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
 One-shot delete: update EMPRUNT set id_client=null where id_client=?
Static SQL for collection: objets.Emprunt.livres
 Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
 Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
 Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
 One-shot delete: delete from COMPO where ID_EMP=?
Static SQL for entity: objets.Client
 Version select: select id from CLIENT where id =?
 Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
 Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
 Update 0: update CLIENT set nom=?, prenom=? where id=?
 Delete 0: delete from CLIENT where id=?
 Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b8d96d9]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@178213b]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b765a2c]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ebf0f36]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807bdeb]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6492fab5]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39a8312f]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c532cd8]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51972dc7]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2002348]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31000e60]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static SQL for entity: objets.Emprunt
 Version select: select id from EMPRUNT where id =?
 Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
 Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
 Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
 Delete 0: delete from EMPRUNT where id=?
 Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13518f37]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f48b3d2]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f8285e]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3724af13]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b53bcc2]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a43ce46]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2320fa6f]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static SQL for entity: objets.Livre
 Version select: select id from livre where id =?
 Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
 Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
 Update 0: update livre set auteur=?, titre=? where id=?
 Delete 0: delete from livre where id=?
 Identity insert: insert into livre (auteur, titre) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@366c4480]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8c11eee]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681a8b4e]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c08c46a]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@708400f6]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4218500f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b2c4efb]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2db68f]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4205be]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54e22bdd]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a67a45]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Property path deemed to be circular : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b9df8a]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e8ac0e1]
Visiting attribute path : client
Property path deemed to be circular : client
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@235a0c16]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f4d54]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Property path deemed to be circular : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Instantiated session factory
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c5ee75e
Registering SessionFactory: f72d191a-47f7-4436-801c-2a7431bfe79c (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@a776e
Registering EntityManagerFactory: pu_essai 
Statistics initialized [enabled=false]
begin
select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Livre#4]
Done materializing entity [objets.Livre#4]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Livre#4
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3c0fae6c
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Livre (l) -> livre0_
Resolved : l -> livre0_.id
Resolved : l -> livre0_.id
getDataType() : titre -> org.hibernate.type.StringType@13c10b87
Resolved : l.titre -> livre0_.titre
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
Using FROM fragment [livre livre0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

throwQueryException() : no errors
HQL: select l from objets.Livre l where l.titre='Germinal' 
SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
Result set row: 0
Result row: EntityKey[objets.Livre#2]
Resolving associations for [objets.Livre#2]
Done materializing entity [objets.Livre#2]
Livre 2 :  Germinal redige par Emile Zola
parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
Resolved : emp -> emprunt0_.id
Resolved : emp -> emprunt0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : emp.id -> emprunt0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
Using FROM fragment [EMPRUNT emprunt0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select emp from objets.Emprunt emp where emp.id=:ref
SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Result set row: 0
Result row: EntityKey[objets.Emprunt#1]
Resolving associations for [objets.Emprunt#1]
select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Client#1]
Done materializing entity [objets.Client#1]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Client#1
Done materializing entity [objets.Emprunt#1]
Loading collection: [objets.Emprunt.livres#1]
select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Preparing collection intializer : [objets.Emprunt.livres#1]
Starting ResultSet row #0
Found row of collection: [objets.Emprunt.livres#1]
Starting ResultSet row #1
Found row of collection: [objets.Emprunt.livres#1]
Resolving associations for [objets.Livre#1]
Done materializing entity [objets.Livre#1]
1 collections were found in result set for role: objets.Emprunt.livres
Collection fully initialized: [objets.Emprunt.livres#1]
1 collections initialized for role: objets.Emprunt.livres
HHH000387: ResultSet's statement was not registered
Done loading collection
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
parse() - HQL: select client from objets.Client client where client.id=:id_ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Client (client) -> client0_
Resolved : client -> client0_.id
Resolved : client -> client0_.id
getDataType() : id -> org.hibernate.type.IntegerType@60611244
Resolved : client.id -> client0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
Using FROM fragment [CLIENT client0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@60611244}

throwQueryException() : no errors
HQL: select client from objets.Client client where client.id=:id_ref
SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#1, objets.Livre#4]}
objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
Result set row: 0
Result row: EntityKey[objets.Client#1]
Loading collection: [objets.Client.emprunts#1]
select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Preparing collection intializer : [objets.Client.emprunts#1]
Starting ResultSet row #0
Found row of collection: [objets.Client.emprunts#1]
Starting ResultSet row #1
Found row of collection: [objets.Client.emprunts#1]
Resolving associations for [objets.Emprunt#4]
Done materializing entity [objets.Emprunt#4]
1 collections were found in result set for role: objets.Client.emprunts
Collection fully initialized: [objets.Client.emprunts#1]
1 collections initialized for role: objets.Client.emprunts
HHH000387: ResultSet's statement was not registered
Done loading collection
Emprunt 4 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 21 jour(s) de 2018-01-03 00:00:00.0 a null
Emprunt 1 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 15 jour(s) de 2017-11-12 00:00:00.0 a 2017-11-18 00:00:00.0
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=pu_essai
HHH000204: Processing PersistenceUnitInfo [
	name: pu_essai
	...]
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
HHH000115: Hibernate connection pool size: 20 (min=1)
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
HHH000397: Using ASTQueryTranslatorFactory
Livre 2 :  Germinal redige par Emile Zola
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Emprunt 4 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 21 jour(s) de 2018-01-03 00:00:00.0 a null
Emprunt 1 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 15 jour(s) de 2017-11-12 00:00:00.0 a 2017-11-18 00:00:00.0
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Incoming config yielded no classloaders; adding standard SE ones
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@6b419da
Adding type registration boolean -> org.hibernate.type.BooleanType@6b419da
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b419da
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@55a561cf
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6295d394
Adding type registration yes_no -> org.hibernate.type.YesNoType@436a4e4b
Adding type registration byte -> org.hibernate.type.ByteType@6156496
Adding type registration byte -> org.hibernate.type.ByteType@6156496
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6156496
Adding type registration character -> org.hibernate.type.CharacterType@37e547da
Adding type registration char -> org.hibernate.type.CharacterType@37e547da
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37e547da
Adding type registration short -> org.hibernate.type.ShortType@327b636c
Adding type registration short -> org.hibernate.type.ShortType@327b636c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@327b636c
Adding type registration integer -> org.hibernate.type.IntegerType@71c8becc
Adding type registration int -> org.hibernate.type.IntegerType@71c8becc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71c8becc
Adding type registration long -> org.hibernate.type.LongType@11dc3715
Adding type registration long -> org.hibernate.type.LongType@11dc3715
Adding type registration java.lang.Long -> org.hibernate.type.LongType@11dc3715
Adding type registration float -> org.hibernate.type.FloatType@6e75aa0d
Adding type registration float -> org.hibernate.type.FloatType@6e75aa0d
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e75aa0d
Adding type registration double -> org.hibernate.type.DoubleType@2aa3cd93
Adding type registration double -> org.hibernate.type.DoubleType@2aa3cd93
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2aa3cd93
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b4a4e18
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b4a4e18
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1df82230
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1df82230
Adding type registration string -> org.hibernate.type.StringType@6293abcc
Adding type registration java.lang.String -> org.hibernate.type.StringType@6293abcc
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2133814f
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d3a22a9
Adding type registration url -> org.hibernate.type.UrlType@7692d9cc
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7692d9cc
Adding type registration date -> org.hibernate.type.DateType@5bfa9431
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5bfa9431
Adding type registration time -> org.hibernate.type.TimeType@358ee631
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@358ee631
Adding type registration timestamp -> org.hibernate.type.TimestampType@3b07a0d6
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b07a0d6
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b07a0d6
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14d3bc22
Adding type registration calendar -> org.hibernate.type.CalendarType@45018215
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45018215
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45018215
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30b7c004
Adding type registration locale -> org.hibernate.type.LocaleType@2f177a4b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f177a4b
Adding type registration currency -> org.hibernate.type.CurrencyType@15b204a1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15b204a1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ddc8ecb
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ddc8ecb
Adding type registration class -> org.hibernate.type.ClassType@309e345f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@309e345f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54c562f7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54c562f7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c9d0b9d
Adding type registration binary -> org.hibernate.type.BinaryType@d4342c2
Adding type registration byte[] -> org.hibernate.type.BinaryType@d4342c2
Adding type registration [B -> org.hibernate.type.BinaryType@d4342c2
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12b0404f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12b0404f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12b0404f
Adding type registration image -> org.hibernate.type.ImageType@647fd8ce
Adding type registration characters -> org.hibernate.type.CharArrayType@51e5fc98
Adding type registration char[] -> org.hibernate.type.CharArrayType@51e5fc98
Adding type registration [C -> org.hibernate.type.CharArrayType@51e5fc98
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48fa0f47
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48fa0f47
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48fa0f47
Adding type registration text -> org.hibernate.type.TextType@161479c6
Adding type registration ntext -> org.hibernate.type.NTextType@778d1062
Adding type registration blob -> org.hibernate.type.BlobType@78e117e3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78e117e3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@363ee3a2
Adding type registration clob -> org.hibernate.type.ClobType@69b2283a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b2283a
Adding type registration nclob -> org.hibernate.type.NClobType@418e7838
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@418e7838
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@cd3fee8
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63021689
Adding type registration serializable -> org.hibernate.type.SerializableType@2e4b8173
Adding type registration object -> org.hibernate.type.ObjectType@57c758ac
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57c758ac
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64cd705f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9225652
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@654f0d9c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a400542
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6580cfdd
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e0b85f9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@63355449
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9353778
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: objets.Client
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Client
Bind entity objets.Client on table CLIENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Collection role: objets.Client.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
building SimpleValue for nom
Building property nom
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property prenom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
building SimpleValue for prenom
Building property prenom
Binding entity from annotated class: objets.Emprunt
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Emprunt
Bind entity objets.Emprunt on table EMPRUNT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
Building property client
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_debut with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
building SimpleValue for date_debut
Building property date_debut
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_fin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
building SimpleValue for date_fin
Building property date_fin
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property delai with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
building SimpleValue for delai
Building property delai
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
Collection role: objets.Emprunt.livres
Building property livres
Binding entity from annotated class: objets.Livre
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Livre
Bind entity objets.Livre on table livre
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property auteur with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
building SimpleValue for auteur
Building property auteur
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Collection role: objets.Livre.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property titre with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
building SimpleValue for titre
Building property titre
Starting fillSimpleValue for id
Starting fillSimpleValue for nom
Starting fillSimpleValue for prenom
Starting fillSimpleValue for id
Starting fillSimpleValue for date_debut
Starting fillSimpleValue for date_fin
Starting fillSimpleValue for delai
Starting fillSimpleValue for id
Starting fillSimpleValue for auteur
Starting fillSimpleValue for titre
Forcing column [id] to be non-null as it is part of the primary key for table [client]
Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
Forcing column [id] to be non-null as it is part of the primary key for table [livre]
Second pass for collection: objets.Emprunt.livres
Binding as ManyToMany: objets.Emprunt.livres
Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
Mapped collection key: ID_EMP, element: ID_LIV
Second pass for collection: objets.Client.emprunts
Binding a OneToMany: objets.Client.emprunts through a foreign key
Mapping collection: objets.Client.emprunts -> EMPRUNT
Retrieving property objets.Emprunt.client
Mapped collection key: id_client, one-to-many: objets.Emprunt
Second pass for collection: objets.Livre.emprunts
Binding as ManyToMany: objets.Livre.emprunts
Retrieving property objets.Emprunt.livres
Mapped collection key: ID_LIV, element: ID_EMP
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@463fd068
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@176b75f7, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Static SQL for collection: objets.Livre.emprunts
 Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
 Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
 Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
 One-shot delete: delete from COMPO where ID_LIV=?
Static SQL for collection: objets.Client.emprunts
 Row insert: update EMPRUNT set id_client=? where id=?
 Row update: update EMPRUNT set  where id=?
 Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
 One-shot delete: update EMPRUNT set id_client=null where id_client=?
Static SQL for collection: objets.Emprunt.livres
 Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
 Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
 Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
 One-shot delete: delete from COMPO where ID_EMP=?
Static SQL for entity: objets.Client
 Version select: select id from CLIENT where id =?
 Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
 Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
 Update 0: update CLIENT set nom=?, prenom=? where id=?
 Delete 0: delete from CLIENT where id=?
 Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ebaa6cb]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8e8225]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18920cc]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c28d64]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c5529ab]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6722d3]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294e5088]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3700ec9c]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5911e990]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d470d0]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static SQL for entity: objets.Emprunt
 Version select: select id from EMPRUNT where id =?
 Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
 Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
 Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
 Delete 0: delete from EMPRUNT where id=?
 Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49872d67]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2320fa6f]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static SQL for entity: objets.Livre
 Version select: select id from livre where id =?
 Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
 Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
 Update 0: update livre set auteur=?, titre=? where id=?
 Delete 0: delete from livre where id=?
 Identity insert: insert into livre (auteur, titre) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0c9195]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7b5824]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdd09b1]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8dcdaa]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbe877d]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf8b2dc]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5829e4f4]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff64c2]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c35172e]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc41abc]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ce23ac]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@544820b7]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b98a075]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522a32b1]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Property path deemed to be circular : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6955cb39]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235a0c16]
Visiting attribute path : client
Property path deemed to be circular : client
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18b0930f]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7906b3]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Property path deemed to be circular : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Instantiated session factory
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70efb718
Registering SessionFactory: 967c49e4-59e2-4fd7-a612-9a556606f0a8 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1f2f9244
Registering EntityManagerFactory: pu_essai 
Statistics initialized [enabled=false]
begin
select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Livre#4]
Done materializing entity [objets.Livre#4]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Livre#4
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@fd0e5b6
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Livre (l) -> livre0_
Resolved : l -> livre0_.id
Resolved : l -> livre0_.id
getDataType() : titre -> org.hibernate.type.StringType@6293abcc
Resolved : l.titre -> livre0_.titre
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
Using FROM fragment [livre livre0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

throwQueryException() : no errors
HQL: select l from objets.Livre l where l.titre='Germinal' 
SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
Result set row: 0
Result row: EntityKey[objets.Livre#2]
Resolving associations for [objets.Livre#2]
Done materializing entity [objets.Livre#2]
Livre 2 :  Germinal redige par Emile Zola
parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
Resolved : emp -> emprunt0_.id
Resolved : emp -> emprunt0_.id
getDataType() : id -> org.hibernate.type.IntegerType@71c8becc
Resolved : emp.id -> emprunt0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
Using FROM fragment [EMPRUNT emprunt0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@71c8becc}

throwQueryException() : no errors
HQL: select emp from objets.Emprunt emp where emp.id=:ref
SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Result set row: 0
Result row: EntityKey[objets.Emprunt#1]
Resolving associations for [objets.Emprunt#1]
select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Client#1]
Done materializing entity [objets.Client#1]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Client#1
Done materializing entity [objets.Emprunt#1]
Loading collection: [objets.Emprunt.livres#1]
select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Preparing collection intializer : [objets.Emprunt.livres#1]
Starting ResultSet row #0
Found row of collection: [objets.Emprunt.livres#1]
Starting ResultSet row #1
Found row of collection: [objets.Emprunt.livres#1]
Resolving associations for [objets.Livre#1]
Done materializing entity [objets.Livre#1]
1 collections were found in result set for role: objets.Emprunt.livres
Collection fully initialized: [objets.Emprunt.livres#1]
1 collections initialized for role: objets.Emprunt.livres
HHH000387: ResultSet's statement was not registered
Done loading collection
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
parse() - HQL: select client from objets.Client client where client.id=:id_ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Client (client) -> client0_
Resolved : client -> client0_.id
Resolved : client -> client0_.id
getDataType() : id -> org.hibernate.type.IntegerType@71c8becc
Resolved : client.id -> client0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
Using FROM fragment [CLIENT client0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@71c8becc}

throwQueryException() : no errors
HQL: select client from objets.Client client where client.id=:id_ref
SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#1, objets.Livre#4]}
objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
Result set row: 0
Result row: EntityKey[objets.Client#1]
Loading collection: [objets.Client.emprunts#1]
select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Preparing collection intializer : [objets.Client.emprunts#1]
Starting ResultSet row #0
Found row of collection: [objets.Client.emprunts#1]
Starting ResultSet row #1
Found row of collection: [objets.Client.emprunts#1]
Resolving associations for [objets.Emprunt#4]
Done materializing entity [objets.Emprunt#4]
1 collections were found in result set for role: objets.Client.emprunts
Collection fully initialized: [objets.Client.emprunts#1]
1 collections initialized for role: objets.Client.emprunts
HHH000387: ResultSet's statement was not registered
Done loading collection
Emprunt 1 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 15 jour(s) de 2017-11-12 00:00:00.0 a 2017-11-18 00:00:00.0
Emprunt 4 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 21 jour(s) de 2018-01-03 00:00:00.0 a null
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=pu_essai
Logging Provider: org.jboss.logging.Slf4jLoggerProvider
Incoming config yielded no classloaders; adding standard SE ones
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=pu_essai, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [pu_essai]
Persistence-unit [pu_essai] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: pu_essai
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/le%20marie%20valentin/Documents/Formation/Maven/jpa/target/classes
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: org.mariadb.jdbc.Driver
		javax.persistence.jdbc.password: 
		javax.persistence.jdbc.url: jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false
		hibernate.show_sql: true
		javax.persistence.jdbc.user: root]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
HHH000412: Hibernate Core {5.1.0.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@6b419da
Adding type registration boolean -> org.hibernate.type.BooleanType@6b419da
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b419da
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@55a561cf
Adding type registration true_false -> org.hibernate.type.TrueFalseType@6295d394
Adding type registration yes_no -> org.hibernate.type.YesNoType@436a4e4b
Adding type registration byte -> org.hibernate.type.ByteType@6156496
Adding type registration byte -> org.hibernate.type.ByteType@6156496
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6156496
Adding type registration character -> org.hibernate.type.CharacterType@37e547da
Adding type registration char -> org.hibernate.type.CharacterType@37e547da
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37e547da
Adding type registration short -> org.hibernate.type.ShortType@327b636c
Adding type registration short -> org.hibernate.type.ShortType@327b636c
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@327b636c
Adding type registration integer -> org.hibernate.type.IntegerType@71c8becc
Adding type registration int -> org.hibernate.type.IntegerType@71c8becc
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71c8becc
Adding type registration long -> org.hibernate.type.LongType@11dc3715
Adding type registration long -> org.hibernate.type.LongType@11dc3715
Adding type registration java.lang.Long -> org.hibernate.type.LongType@11dc3715
Adding type registration float -> org.hibernate.type.FloatType@6e75aa0d
Adding type registration float -> org.hibernate.type.FloatType@6e75aa0d
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e75aa0d
Adding type registration double -> org.hibernate.type.DoubleType@2aa3cd93
Adding type registration double -> org.hibernate.type.DoubleType@2aa3cd93
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2aa3cd93
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b4a4e18
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b4a4e18
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1df82230
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1df82230
Adding type registration string -> org.hibernate.type.StringType@6293abcc
Adding type registration java.lang.String -> org.hibernate.type.StringType@6293abcc
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2133814f
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7d3a22a9
Adding type registration url -> org.hibernate.type.UrlType@7692d9cc
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7692d9cc
Adding type registration date -> org.hibernate.type.DateType@5bfa9431
Adding type registration java.sql.Date -> org.hibernate.type.DateType@5bfa9431
Adding type registration time -> org.hibernate.type.TimeType@358ee631
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@358ee631
Adding type registration timestamp -> org.hibernate.type.TimestampType@3b07a0d6
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3b07a0d6
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3b07a0d6
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14d3bc22
Adding type registration calendar -> org.hibernate.type.CalendarType@45018215
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@45018215
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@45018215
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30b7c004
Adding type registration locale -> org.hibernate.type.LocaleType@2f177a4b
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f177a4b
Adding type registration currency -> org.hibernate.type.CurrencyType@15b204a1
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15b204a1
Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ddc8ecb
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ddc8ecb
Adding type registration class -> org.hibernate.type.ClassType@309e345f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@309e345f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54c562f7
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54c562f7
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c9d0b9d
Adding type registration binary -> org.hibernate.type.BinaryType@d4342c2
Adding type registration byte[] -> org.hibernate.type.BinaryType@d4342c2
Adding type registration [B -> org.hibernate.type.BinaryType@d4342c2
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12b0404f
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12b0404f
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12b0404f
Adding type registration image -> org.hibernate.type.ImageType@647fd8ce
Adding type registration characters -> org.hibernate.type.CharArrayType@51e5fc98
Adding type registration char[] -> org.hibernate.type.CharArrayType@51e5fc98
Adding type registration [C -> org.hibernate.type.CharArrayType@51e5fc98
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48fa0f47
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48fa0f47
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48fa0f47
Adding type registration text -> org.hibernate.type.TextType@161479c6
Adding type registration ntext -> org.hibernate.type.NTextType@778d1062
Adding type registration blob -> org.hibernate.type.BlobType@78e117e3
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78e117e3
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@363ee3a2
Adding type registration clob -> org.hibernate.type.ClobType@69b2283a
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69b2283a
Adding type registration nclob -> org.hibernate.type.NClobType@418e7838
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@418e7838
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@cd3fee8
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63021689
Adding type registration serializable -> org.hibernate.type.SerializableType@2e4b8173
Adding type registration object -> org.hibernate.type.ObjectType@57c758ac
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57c758ac
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64cd705f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9225652
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@654f0d9c
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6a400542
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6580cfdd
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e0b85f9
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@63355449
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9353778
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.mariadb.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : MySQL
    version : 10.1.31-MariaDB
      major : 10
      minor : 1
Driver ->
       name : mariadb-jdbc
    version : 1.1
      major : 1
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Binding entity from annotated class: objets.Client
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Client
Bind entity objets.Client on table CLIENT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='client'}
Collection role: objets.Client.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=nom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:nom]
building SimpleValue for nom
Building property nom
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CLIENT), mappingColumn=prenom, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property prenom with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Client:prenom]
building SimpleValue for prenom
Building property prenom
Binding entity from annotated class: objets.Emprunt
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Emprunt
Bind entity objets.Emprunt on table EMPRUNT
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='id_client', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=client, insertable=true, updatable=true, unique=false}
Building property client
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_debut, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_debut with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_debut]
building SimpleValue for date_debut
Building property date_debut
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=date_fin, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property date_fin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:date_fin]
building SimpleValue for date_fin
Building property date_fin
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=delai, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property delai with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Emprunt:delai]
building SimpleValue for delai
Building property delai
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(EMPRUNT), mappingColumn=livres_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='livres_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_EMP', referencedColumn='ID', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='ID_LIV', referencedColumn='ID', mappedBy=''}
Collection role: objets.Emprunt.livres
Building property livres
Binding entity from annotated class: objets.Livre
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Livre
Bind entity objets.Livre on table livre
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=auteur, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property auteur with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:auteur]
building SimpleValue for auteur
Building property auteur
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=emprunts_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='emprunts_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='livres'}
Collection role: objets.Livre.emprunts
Building property emprunts
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(livre), mappingColumn=titre, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property titre with lazy=false
Attempting to locate auto-apply AttributeConverter for property [objets.Livre:titre]
building SimpleValue for titre
Building property titre
Starting fillSimpleValue for id
Starting fillSimpleValue for nom
Starting fillSimpleValue for prenom
Starting fillSimpleValue for id
Starting fillSimpleValue for date_debut
Starting fillSimpleValue for date_fin
Starting fillSimpleValue for delai
Starting fillSimpleValue for id
Starting fillSimpleValue for auteur
Starting fillSimpleValue for titre
Forcing column [id] to be non-null as it is part of the primary key for table [client]
Forcing column [id] to be non-null as it is part of the primary key for table [emprunt]
Forcing column [id] to be non-null as it is part of the primary key for table [livre]
Second pass for collection: objets.Emprunt.livres
Binding as ManyToMany: objets.Emprunt.livres
Forcing column [id_emp] to be non-null as it is part of the primary key for table [compo]
Forcing column [id_liv] to be non-null as it is part of the primary key for table [compo]
Mapped collection key: ID_EMP, element: ID_LIV
Second pass for collection: objets.Client.emprunts
Binding a OneToMany: objets.Client.emprunts through a foreign key
Mapping collection: objets.Client.emprunts -> EMPRUNT
Retrieving property objets.Emprunt.client
Mapped collection key: id_client, one-to-many: objets.Emprunt
Second pass for collection: objets.Livre.emprunts
Binding as ManyToMany: objets.Livre.emprunts
Retrieving property objets.Emprunt.livres
Mapped collection key: ID_LIV, element: ID_EMP
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Resolving reference to class: objets.Livre
Resolving reference to class: objets.Emprunt
Resolving reference to class: objets.Client
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@463fd068
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: ON_CLOSE
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.161-b12, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@176b75f7, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=FR, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\le marie valentin\Documents\Formation\Maven\jpa, java.runtime.version=1.8.0_161-b12, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.io.tmpdir=C:\Users\LEMARI~1\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_161/bin/../jre/lib/amd64;C:\Program Files\Java\jdk1.8.0_161\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Users\le marie valentin\AppData\Local\Microsoft\WindowsApps;C:\Users\le marie valentin\AppData\Local\atom\bin;C:\Users\le marie valentin\Downloads\apache-maven-3.5.2\bin;;C:\Users\le marie valentin\Downloads\sts-bundle\sts-3.8.4.RELEASE;;., javax.persistence.jdbc.driver=org.mariadb.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=pu_essai, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\le marie valentin, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.mariadb.jdbc.Driver, user.name=le marie valentin, java.class.path=C:\Users\le marie valentin\Documents\Formation\Maven\jpa\target\classes;C:\Users\le marie valentin\.m2\repository\org\mariadb\jdbc\mariadb-java-client\1.1.7\mariadb-java-client-1.1.7.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0.jar;C:\Users\le marie valentin\.m2\repository\net\java\dev\jna\jna\3.3.0\jna-3.3.0-platform.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-entitymanager\5.1.0.Final\hibernate-entitymanager-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\hibernate-core\5.1.0.Final\hibernate-core-5.1.0.Final.jar;C:\Users\le marie valentin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\le marie valentin\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\le marie valentin\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\le marie valentin\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\le marie valentin\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\le marie valentin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\le marie valentin\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\le marie valentin\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\le marie valentin\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\le marie valentin\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=test_jpa.jpa.App, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false, user.language=fr, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_161, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
Skipping JACC integration as it was not enabled
External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Client] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Client
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Emprunt] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Emprunt
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Not known whether passed class name [objets.Livre] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : objets.Livre
Static SQL for collection: objets.Livre.emprunts
 Row insert: insert into COMPO (ID_LIV, ID_EMP) values (?, ?)
 Row update: update COMPO set ID_EMP=? where ID_LIV=? and ID_EMP=?
 Row delete: delete from COMPO where ID_LIV=? and ID_EMP=?
 One-shot delete: delete from COMPO where ID_LIV=?
Static SQL for collection: objets.Client.emprunts
 Row insert: update EMPRUNT set id_client=? where id=?
 Row update: update EMPRUNT set  where id=?
 Row delete: update EMPRUNT set id_client=null where id_client=? and id=?
 One-shot delete: update EMPRUNT set id_client=null where id_client=?
Static SQL for collection: objets.Emprunt.livres
 Row insert: insert into COMPO (ID_EMP, ID_LIV) values (?, ?)
 Row update: update COMPO set ID_LIV=? where ID_EMP=? and ID_LIV=?
 Row delete: delete from COMPO where ID_EMP=? and ID_LIV=?
 One-shot delete: delete from COMPO where ID_EMP=?
Static SQL for entity: objets.Client
 Version select: select id from CLIENT where id =?
 Snapshot select: select client_.id, client_.nom as nom2_0_, client_.prenom as prenom3_0_ from CLIENT client_ where client_.id=?
 Insert 0: insert into CLIENT (nom, prenom, id) values (?, ?, ?)
 Update 0: update CLIENT set nom=?, prenom=? where id=?
 Delete 0: delete from CLIENT where id=?
 Identity insert: insert into CLIENT (nom, prenom) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ebaa6cb]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [NONE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e8e8225]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18920cc]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c28d64]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_NOWAIT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c5529ab]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [UPGRADE_SKIPLOCKED]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6722d3]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [FORCE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@294e5088]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_READ]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3700ec9c]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_WRITE]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5911e990]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [PESSIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d470d0]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54c62d71]
Visiting attribute path : emprunts
Visiting attribute path : nom
Visiting attribute path : prenom
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Client)
    - Returns
       - EntityReturnImpl(entity=objets.Client, querySpaceUid=<gen:0>, path=objets.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity objets.Client [OPTIMISTIC_FORCE_INCREMENT]: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_MERGE on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static select for action ACTION_REFRESH on entity objets.Client: select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Static SQL for entity: objets.Emprunt
 Version select: select id from EMPRUNT where id =?
 Snapshot select: select emprunt_.id, emprunt_.id_client as id_clien5_2_, emprunt_.date_debut as date_deb2_2_, emprunt_.date_fin as date_fin3_2_, emprunt_.delai as delai4_2_ from EMPRUNT emprunt_ where emprunt_.id=?
 Insert 0: insert into EMPRUNT (id_client, date_debut, date_fin, delai, id) values (?, ?, ?, ?, ?)
 Update 0: update EMPRUNT set id_client=?, date_debut=?, date_fin=?, delai=? where id=?
 Delete 0: delete from EMPRUNT where id=?
 Identity insert: insert into EMPRUNT (id_client, date_debut, date_fin, delai) values (?, ?, ?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49872d67]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23bff419]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [NONE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ead359]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@180da663]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(client)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Client)
                - SQL table alias mapping - client1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity objets.Emprunt [READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_, client1_.id as id1_0_1_, client1_.nom as nom2_0_1_, client1_.prenom as prenom3_0_1_ from EMPRUNT emprunt0_ left outer join CLIENT client1_ on emprunt0_.id_client=client1_.id where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340da44c]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37052337]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2320fa6f]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d722ac9]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_NOWAIT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0a4cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d97a632]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [UPGRADE_SKIPLOCKED]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@616fe72b]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e7b159b]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [FORCE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5d9a50]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293a5f75]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_READ]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fcb4004]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56e8b606]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_WRITE]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd29a59]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53142455]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [PESSIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40dff0b7]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60975100]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1253e7cb]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61c9c3fd]
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Emprunt)
    - Returns
       - EntityReturnImpl(entity=objets.Emprunt, querySpaceUid=<gen:0>, path=objets.Emprunt)
          - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:1>, path=objets.Emprunt.client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Emprunt)
          - SQL table alias mapping - emprunt0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

Static select for entity objets.Emprunt [OPTIMISTIC_FORCE_INCREMENT]: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_MERGE on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static select for action ACTION_REFRESH on entity objets.Emprunt: select emprunt0_.id as id1_2_0_, emprunt0_.id_client as id_clien5_2_0_, emprunt0_.date_debut as date_deb2_2_0_, emprunt0_.date_fin as date_fin3_2_0_, emprunt0_.delai as delai4_2_0_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Static SQL for entity: objets.Livre
 Version select: select id from livre where id =?
 Snapshot select: select livre_.id, livre_.auteur as auteur2_3_, livre_.titre as titre3_3_ from livre livre_ where livre_.id=?
 Insert 0: insert into livre (auteur, titre, id) values (?, ?, ?)
 Update 0: update livre set auteur=?, titre=? where id=?
 Delete 0: delete from livre where id=?
 Identity insert: insert into livre (auteur, titre) values (?, ?)
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0c9195]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [NONE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7b5824]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdd09b1]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8dcdaa]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_NOWAIT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbe877d]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [UPGRADE_SKIPLOCKED]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf8b2dc]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [FORCE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5829e4f4]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_READ]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff64c2]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_WRITE]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c35172e]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [PESSIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc41abc]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ce23ac]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=objets.Livre)
    - Returns
       - EntityReturnImpl(entity=objets.Livre, querySpaceUid=<gen:0>, path=objets.Livre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=objets.Livre)
          - SQL table alias mapping - livre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

Static select for entity objets.Livre [OPTIMISTIC_FORCE_INCREMENT]: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_MERGE on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Static select for action ACTION_REFRESH on entity objets.Livre: select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@544820b7]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b98a075]
Visiting attribute path : client
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522a32b1]
Visiting attribute path : client.emprunts
Property path deemed to be circular : client.emprunts
Visiting attribute path : client.nom
Visiting attribute path : client.prenom
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Property path deemed to be circular : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Livre.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Livre.emprunts, querySpaceUid=<gen:0>, path=[objets.Livre.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Livre.emprunts].<elements>)
             - EntityAttributeFetchImpl(entity=objets.Client, querySpaceUid=<gen:2>, path=[objets.Livre.emprunts].<elements>.client)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Livre.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {ID_LIV2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunt1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(client)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=objets.Client)
                      - SQL table alias mapping - client2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

Static select for collection objets.Livre.emprunts: select emprunts0_.ID_LIV as ID_LIV2_1_0_, emprunts0_.ID_EMP as ID_EMP1_1_0_, emprunt1_.id as id1_2_1_, emprunt1_.id_client as id_clien5_2_1_, emprunt1_.date_debut as date_deb2_2_1_, emprunt1_.date_fin as date_fin3_2_1_, emprunt1_.delai as delai4_2_1_, client2_.id as id1_0_2_, client2_.nom as nom2_0_2_, client2_.prenom as prenom3_0_2_ from COMPO emprunts0_ inner join EMPRUNT emprunt1_ on emprunts0_.ID_EMP=emprunt1_.id left outer join CLIENT client2_ on emprunt1_.id_client=client2_.id where emprunts0_.ID_LIV=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6955cb39]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235a0c16]
Visiting attribute path : client
Property path deemed to be circular : client
Visiting attribute path : date_debut
Visiting attribute path : date_fin
Visiting attribute path : delai
Visiting attribute path : livres
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Client.emprunts)
    - Returns
       - CollectionReturnImpl(collection=objets.Client.emprunts, querySpaceUid=<gen:0>, path=[objets.Client.emprunts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Emprunt, querySpaceUid=<gen:1>, path=[objets.Client.emprunts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Client.emprunts)
          - SQL table alias mapping - emprunts0_
          - alias suffix - 0_
          - suffixed key columns - {id_clien5_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Emprunt)
                - SQL table alias mapping - emprunts0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

Static select for collection objets.Client.emprunts: select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18b0930f]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7906b3]
Visiting attribute path : auteur
Visiting attribute path : emprunts
Property path deemed to be circular : emprunts
Visiting attribute path : titre
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=objets.Emprunt.livres)
    - Returns
       - CollectionReturnImpl(collection=objets.Emprunt.livres, querySpaceUid=<gen:0>, path=[objets.Emprunt.livres])
          - (collection element) CollectionFetchableElementEntityGraph(entity=objets.Livre, querySpaceUid=<gen:1>, path=[objets.Emprunt.livres].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=objets.Emprunt.livres)
          - SQL table alias mapping - livres0_
          - alias suffix - 0_
          - suffixed key columns - {ID_EMP1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=objets.Livre)
                - SQL table alias mapping - livre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

Static select for collection objets.Emprunt.livres: select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Instantiated session factory
No actions specified; doing nothing
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70efb718
Registering SessionFactory: f9b9a96c-6d9c-4cc9-9325-8740988071ee (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@1f2f9244
Registering EntityManagerFactory: pu_essai 
Statistics initialized [enabled=false]
begin
select livre0_.id as id1_3_0_, livre0_.auteur as auteur2_3_0_, livre0_.titre as titre3_3_0_ from livre livre0_ where livre0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Livre#4]
Done materializing entity [objets.Livre#4]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Livre#4
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@fd0e5b6
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select l from objets.Livre l where l.titre='Germinal' 
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Livre'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'l'
          |  \-[IDENT] Node: 'titre'
          \-[QUOTED_STRING] Node: ''Germinal''

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Livre (l) -> livre0_
Resolved : l -> livre0_.id
Resolved : l -> livre0_.id
getDataType() : titre -> org.hibernate.type.StringType@6293abcc
Resolved : l.titre -> livre0_.titre
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} livre0_.id ) ( FromClause{level=1} livre livre0_ ) ( where ( = ( livre0_.titre livre0_.id titre ) 'Germinal' ) ) )
Using FROM fragment [livre livre0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (livre)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'livre0_.id as id1_3_' {alias=l, className=objets.Livre, tableAlias=livre0_}
    |  \-[SQL_TOKEN] SqlFragment: 'livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[livre0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'livre livre0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=livre,tableAlias=livre0_,origin=null,columns={,className=objets.Livre}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'livre0_.titre' {propertyName=titre,dereferenceType=PRIMITIVE,getPropertyPath=titre,path=l.titre,tableAlias=livre0_,className=objets.Livre,classAlias=l}
          |  +-[ALIAS_REF] IdentNode: 'livre0_.id' {alias=l, className=objets.Livre, tableAlias=livre0_}
          |  \-[IDENT] IdentNode: 'titre' {originalText=titre}
          \-[QUOTED_STRING] LiteralNode: ''Germinal''

throwQueryException() : no errors
HQL: select l from objets.Livre l where l.titre='Germinal' 
SQL: select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
select livre0_.id as id1_3_, livre0_.auteur as auteur2_3_, livre0_.titre as titre3_3_ from livre livre0_ where livre0_.titre='Germinal'
Result set row: 0
Result row: EntityKey[objets.Livre#2]
Resolving associations for [objets.Livre#2]
Done materializing entity [objets.Livre#2]
Livre 2 :  Germinal redige par Emile Zola
parse() - HQL: select emp from objets.Emprunt emp where emp.id=:ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Emprunt'
    |  |     \-[ALIAS] Node: 'emp'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'emp'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'emp'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Emprunt (emp) -> emprunt0_
Resolved : emp -> emprunt0_.id
Resolved : emp -> emprunt0_.id
getDataType() : id -> org.hibernate.type.IntegerType@71c8becc
Resolved : emp.id -> emprunt0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} emprunt0_.id ) ( FromClause{level=1} EMPRUNT emprunt0_ ) ( where ( = ( emprunt0_.id emprunt0_.id id ) ? ) ) )
Using FROM fragment [EMPRUNT emprunt0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EMPRUNT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id as id1_2_' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
    |  \-[SQL_TOKEN] SqlFragment: 'emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[emp], fromElementByTableAlias=[emprunt0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EMPRUNT emprunt0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=emp,role=null,tableName=EMPRUNT,tableAlias=emprunt0_,origin=null,columns={,className=objets.Emprunt}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'emprunt0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=emp.id,tableAlias=emprunt0_,className=objets.Emprunt,classAlias=emp}
          |  +-[ALIAS_REF] IdentNode: 'emprunt0_.id' {alias=emp, className=objets.Emprunt, tableAlias=emprunt0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=ref, expectedType=org.hibernate.type.IntegerType@71c8becc}

throwQueryException() : no errors
HQL: select emp from objets.Emprunt emp where emp.id=:ref
SQL: select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select emprunt0_.id as id1_2_, emprunt0_.id_client as id_clien5_2_, emprunt0_.date_debut as date_deb2_2_, emprunt0_.date_fin as date_fin3_2_, emprunt0_.delai as delai4_2_ from EMPRUNT emprunt0_ where emprunt0_.id=?
Result set row: 0
Result row: EntityKey[objets.Emprunt#1]
Resolving associations for [objets.Emprunt#1]
select client0_.id as id1_0_0_, client0_.nom as nom2_0_0_, client0_.prenom as prenom3_0_0_ from CLIENT client0_ where client0_.id=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [objets.Client#1]
Done materializing entity [objets.Client#1]
HHH000387: ResultSet's statement was not registered
Done entity load : objets.Client#1
Done materializing entity [objets.Emprunt#1]
Loading collection: [objets.Emprunt.livres#1]
select livres0_.ID_EMP as ID_EMP1_1_0_, livres0_.ID_LIV as ID_LIV2_1_0_, livre1_.id as id1_3_1_, livre1_.auteur as auteur2_3_1_, livre1_.titre as titre3_3_1_ from COMPO livres0_ inner join livre livre1_ on livres0_.ID_LIV=livre1_.id where livres0_.ID_EMP=?
Preparing collection intializer : [objets.Emprunt.livres#1]
Starting ResultSet row #0
Found row of collection: [objets.Emprunt.livres#1]
Starting ResultSet row #1
Found row of collection: [objets.Emprunt.livres#1]
Resolving associations for [objets.Livre#1]
Done materializing entity [objets.Livre#1]
1 collections were found in result set for role: objets.Emprunt.livres
Collection fully initialized: [objets.Emprunt.livres#1]
1 collections initialized for role: objets.Emprunt.livres
HHH000387: ResultSet's statement was not registered
Done loading collection
Livre 1 :  Vingt mille lieues sous les mers redige par Jules Verne
Livre 4 :  Apprendre à parler aux animaux redige par Gaston Pouet
parse() - HQL: select client from objets.Client client where client.id=:id_ref
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'objets'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'client'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'client'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'client'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id_ref'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : objets.Client (client) -> client0_
Resolved : client -> client0_.id
Resolved : client -> client0_.id
getDataType() : id -> org.hibernate.type.IntegerType@71c8becc
Resolved : client.id -> client0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} CLIENT client0_ ) ( where ( = ( client0_.id client0_.id id ) ? ) ) )
Using FROM fragment [CLIENT client0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (CLIENT)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_0_' {alias=client, className=objets.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.nom as nom2_0_, client0_.prenom as prenom3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[client], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'CLIENT client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=client,role=null,tableName=CLIENT,tableAlias=client0_,origin=null,columns={,className=objets.Client}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=client.id,tableAlias=client0_,className=objets.Client,classAlias=client}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=client, className=objets.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id_ref, expectedType=org.hibernate.type.IntegerType@71c8becc}

throwQueryException() : no errors
HQL: select client from objets.Client client where client.id=:id_ref
SQL: select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [objets.Livre.emprunts#4], was: [objets.Livre.emprunts#4] (uninitialized)
Collection found: [objets.Livre.emprunts#2], was: [objets.Livre.emprunts#2] (uninitialized)
Collection found: [objets.Emprunt.livres#1], was: [objets.Emprunt.livres#1] (initialized)
Collection found: [objets.Client.emprunts#1], was: [objets.Client.emprunts#1] (uninitialized)
Collection found: [objets.Livre.emprunts#1], was: [objets.Livre.emprunts#1] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
Listing entities:
objets.Livre{titre=Apprendre à parler aux animaux, emprunts=<uninitialized>, id=4, auteur=Gaston Pouet}
objets.Emprunt{delai=15, date_debut=2017-11-12 00:00:00.0, client=objets.Client#1, date_fin=2017-11-18 00:00:00.0, id=1, livres=[objets.Livre#1, objets.Livre#4]}
objets.Client{emprunts=<uninitialized>, id=1, nom=Brigand, prenom=Pierre}
objets.Livre{titre=Vingt mille lieues sous les mers, emprunts=<uninitialized>, id=1, auteur=Jules Verne}
objets.Livre{titre=Germinal, emprunts=<uninitialized>, id=2, auteur=Emile Zola}
select client0_.id as id1_0_, client0_.nom as nom2_0_, client0_.prenom as prenom3_0_ from CLIENT client0_ where client0_.id=?
Result set row: 0
Result row: EntityKey[objets.Client#1]
Loading collection: [objets.Client.emprunts#1]
select emprunts0_.id_client as id_clien5_2_0_, emprunts0_.id as id1_2_0_, emprunts0_.id as id1_2_1_, emprunts0_.id_client as id_clien5_2_1_, emprunts0_.date_debut as date_deb2_2_1_, emprunts0_.date_fin as date_fin3_2_1_, emprunts0_.delai as delai4_2_1_ from EMPRUNT emprunts0_ where emprunts0_.id_client=?
Preparing collection intializer : [objets.Client.emprunts#1]
Starting ResultSet row #0
Found row of collection: [objets.Client.emprunts#1]
Starting ResultSet row #1
Found row of collection: [objets.Client.emprunts#1]
Resolving associations for [objets.Emprunt#4]
Done materializing entity [objets.Emprunt#4]
1 collections were found in result set for role: objets.Client.emprunts
Collection fully initialized: [objets.Client.emprunts#1]
1 collections initialized for role: objets.Client.emprunts
HHH000387: ResultSet's statement was not registered
Done loading collection
Emprunt 1 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 15 jour(s) de 2017-11-12 00:00:00.0 a 2017-11-18 00:00:00.0
Emprunt 4 : Client 1 : Brigand Pierre a emprunte des livre(s) avec un delai de 21 jour(s) de 2018-01-03 00:00:00.0 a null
HHH000031: Closing
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/pizza_master?use_ssl=false]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
Remove: name=pu_essai
